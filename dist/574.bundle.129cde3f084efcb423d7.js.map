{"version":3,"file":"574.bundle.129cde3f084efcb423d7.js","mappings":"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","sources":["webpack:///../../../extensions/cornerstone/src/Viewport/Overlays/ViewportImageScrollbar.tsx","webpack:///../../../extensions/cornerstone/src/Viewport/Overlays/utils.ts","webpack:///../../../extensions/cornerstone/src/Viewport/Overlays/CustomizableViewportOverlay.tsx","webpack:///../../../extensions/cornerstone/src/Viewport/Overlays/ViewportOrientationMarkers.tsx","webpack:///../../../extensions/cornerstone/src/Viewport/Overlays/ViewportImageSliceLoadingIndicator.tsx","webpack:///../../../extensions/cornerstone/src/Viewport/Overlays/CornerstoneOverlays.tsx","webpack:///../../../extensions/cornerstone/src/components/CinePlayer/CinePlayer.tsx","webpack:///../../../extensions/cornerstone/src/components/CinePlayer/index.ts","webpack:///../../../extensions/cornerstone/src/components/OHIFViewportActionCorners.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/Colormap.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/Colorbar.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/WindowLevel.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/VolumeRenderingPresetsContent.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/VolumeRenderingPresets.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/VolumeRenderingQuality.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/VolumeShift.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/VolumeLighting.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/VolumeShade.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/VolumeRenderingOptions.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/WindowLevelActionMenu.tsx","webpack:///../../../extensions/cornerstone/src/Viewport/OHIFCornerstoneViewport.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/getWindowLevelActionMenu.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Enums, Types, utilities } from '@cornerstonejs/core';\r\nimport { utilities as csToolsUtils } from '@cornerstonejs/tools';\r\nimport { ImageScrollbar } from '@ohif/ui';\r\n\r\nfunction CornerstoneImageScrollbar({\r\n  viewportData,\r\n  viewportId,\r\n  element,\r\n  imageSliceData,\r\n  setImageSliceData,\r\n  scrollbarHeight,\r\n  servicesManager,\r\n}: withAppTypes) {\r\n  const { cineService, cornerstoneViewportService } = servicesManager.services;\r\n\r\n  const onImageScrollbarChange = (imageIndex, viewportId) => {\r\n    const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n\r\n    const { isCineEnabled } = cineService.getState();\r\n\r\n    if (isCineEnabled) {\r\n      // on image scrollbar change, stop the CINE if it is playing\r\n      cineService.stopClip(element, { viewportId });\r\n      cineService.setCine({ id: viewportId, isPlaying: false });\r\n    }\r\n\r\n    csToolsUtils.jumpToSlice(viewport.element, {\r\n      imageIndex,\r\n      debounceLoading: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!viewportData) {\r\n      return;\r\n    }\r\n\r\n    const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n\r\n    if (!viewport) {\r\n      return;\r\n    }\r\n\r\n    if (viewportData.viewportType === Enums.ViewportType.STACK) {\r\n      const imageIndex = viewport.getCurrentImageIdIndex();\r\n\r\n      setImageSliceData({\r\n        imageIndex: imageIndex,\r\n        numberOfSlices: viewportData.data.imageIds.length,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (viewportData.viewportType === Enums.ViewportType.ORTHOGRAPHIC) {\r\n      const sliceData = utilities.getImageSliceDataForVolumeViewport(\r\n        viewport as Types.IVolumeViewport\r\n      );\r\n\r\n      if (!sliceData) {\r\n        return;\r\n      }\r\n\r\n      const { imageIndex, numberOfSlices } = sliceData;\r\n      setImageSliceData({ imageIndex, numberOfSlices });\r\n    }\r\n  }, [viewportId, viewportData]);\r\n\r\n  useEffect(() => {\r\n    if (viewportData?.viewportType !== Enums.ViewportType.STACK) {\r\n      return;\r\n    }\r\n\r\n    const updateStackIndex = event => {\r\n      const { newImageIdIndex } = event.detail;\r\n      // find the index of imageId in the imageIds\r\n      setImageSliceData({\r\n        imageIndex: newImageIdIndex,\r\n        numberOfSlices: viewportData.data.imageIds.length,\r\n      });\r\n    };\r\n\r\n    element.addEventListener(Enums.Events.STACK_VIEWPORT_SCROLL, updateStackIndex);\r\n\r\n    return () => {\r\n      element.removeEventListener(Enums.Events.STACK_VIEWPORT_SCROLL, updateStackIndex);\r\n    };\r\n  }, [viewportData, element]);\r\n\r\n  useEffect(() => {\r\n    if (viewportData?.viewportType !== Enums.ViewportType.ORTHOGRAPHIC) {\r\n      return;\r\n    }\r\n\r\n    const updateVolumeIndex = event => {\r\n      const { imageIndex, numberOfSlices } = event.detail;\r\n      // find the index of imageId in the imageIds\r\n      setImageSliceData({ imageIndex, numberOfSlices });\r\n    };\r\n\r\n    element.addEventListener(Enums.Events.VOLUME_NEW_IMAGE, updateVolumeIndex);\r\n\r\n    return () => {\r\n      element.removeEventListener(Enums.Events.VOLUME_NEW_IMAGE, updateVolumeIndex);\r\n    };\r\n  }, [viewportData, element]);\r\n\r\n  return (\r\n    <ImageScrollbar\r\n      onChange={evt => onImageScrollbarChange(evt, viewportId)}\r\n      max={imageSliceData.numberOfSlices ? imageSliceData.numberOfSlices - 1 : 0}\r\n      height={scrollbarHeight}\r\n      value={imageSliceData.imageIndex}\r\n    />\r\n  );\r\n}\r\n\r\nCornerstoneImageScrollbar.propTypes = {\r\n  viewportData: PropTypes.object,\r\n  viewportId: PropTypes.string.isRequired,\r\n  element: PropTypes.instanceOf(Element),\r\n  scrollbarHeight: PropTypes.string,\r\n  imageSliceData: PropTypes.object.isRequired,\r\n  setImageSliceData: PropTypes.func.isRequired,\r\n  servicesManager: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CornerstoneImageScrollbar;\r\n","import moment from 'moment';\r\nimport { metaData } from '@cornerstonejs/core';\r\n\r\n/**\r\n * Checks if value is valid.\r\n *\r\n * @param {number} value\r\n * @returns {boolean} is valid.\r\n */\r\nexport function isValidNumber(value) {\r\n  return typeof value === 'number' && !isNaN(value);\r\n}\r\n\r\n/**\r\n * Formats number precision.\r\n *\r\n * @param {number} number\r\n * @param {number} precision\r\n * @returns {number} formatted number.\r\n */\r\nexport function formatNumberPrecision(number, precision = 0) {\r\n  if (number !== null) {\r\n    return parseFloat(number).toFixed(precision);\r\n  }\r\n}\r\n\r\n/**\r\n * Formats DICOM date.\r\n *\r\n * @param {string} date\r\n * @param {string} strFormat\r\n * @returns {string} formatted date.\r\n */\r\nexport function formatDICOMDate(date, strFormat = 'MMM D, YYYY') {\r\n  return moment(date, 'YYYYMMDD').format(strFormat);\r\n}\r\n\r\n/**\r\n *    DICOM Time is stored as HHmmss.SSS, where:\r\n *      HH 24 hour time:\r\n *        m mm        0..59   Minutes\r\n *        s ss        0..59   Seconds\r\n *        S SS SSS    0..999  Fractional seconds\r\n *\r\n *        Goal: '24:12:12'\r\n *\r\n * @param {*} time\r\n * @param {string} strFormat\r\n * @returns {string} formatted name.\r\n */\r\nexport function formatDICOMTime(time, strFormat = 'HH:mm:ss') {\r\n  return moment(time, 'HH:mm:ss').format(strFormat);\r\n}\r\n\r\n/**\r\n * Formats a patient name for display purposes\r\n *\r\n * @param {string} name\r\n * @returns {string} formatted name.\r\n */\r\nexport function formatPN(name) {\r\n  if (!name) {\r\n    return '';\r\n  }\r\n\r\n  const cleaned = name\r\n    .split('^')\r\n    .filter(s => !!s)\r\n    .join(', ')\r\n    .trim();\r\n  return cleaned === ',' || cleaned === '' ? '' : cleaned;\r\n}\r\n\r\n/**\r\n * Gets compression type\r\n *\r\n * @param {number} imageId\r\n * @returns {string} compression type.\r\n */\r\nexport function getCompression(imageId) {\r\n  const generalImageModule = metaData.get('generalImageModule', imageId) || {};\r\n  const { lossyImageCompression, lossyImageCompressionRatio, lossyImageCompressionMethod } =\r\n    generalImageModule;\r\n\r\n  if (lossyImageCompression === '01' && lossyImageCompressionRatio !== '') {\r\n    const compressionMethod = lossyImageCompressionMethod || 'Lossy: ';\r\n    const compressionRatio = formatNumberPrecision(lossyImageCompressionRatio, 2);\r\n    return compressionMethod + compressionRatio + ' : 1';\r\n  }\r\n\r\n  return 'Lossless / Uncompressed';\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { vec3 } from 'gl-matrix';\r\nimport PropTypes from 'prop-types';\r\nimport { metaData, Enums, utilities } from '@cornerstonejs/core';\r\nimport { ImageSliceData } from '@cornerstonejs/core/dist/esm/types';\r\nimport { ViewportOverlay } from '@ohif/ui';\r\nimport { InstanceMetadata } from '@ohif/core/src/types';\r\nimport { formatPN, formatDICOMDate, formatDICOMTime, formatNumberPrecision } from './utils';\r\nimport { StackViewportData, VolumeViewportData } from '../../types/CornerstoneCacheService';\r\n\r\nimport './CustomizableViewportOverlay.css';\r\n\r\nconst EPSILON = 1e-4;\r\n\r\ntype ViewportData = StackViewportData | VolumeViewportData;\r\n\r\ninterface OverlayItemProps {\r\n  element: HTMLElement;\r\n  viewportData: ViewportData;\r\n  imageSliceData: ImageSliceData;\r\n  servicesManager: AppTypes.ServicesManager;\r\n  viewportId: string;\r\n  instance: InstanceMetadata;\r\n  customization: any;\r\n  formatters: {\r\n    formatPN: (val) => string;\r\n    formatDate: (val) => string;\r\n    formatTime: (val) => string;\r\n    formatNumberPrecision: (val, number) => string;\r\n  };\r\n\r\n  // calculated values\r\n  voi: {\r\n    windowWidth: number;\r\n    windowCenter: number;\r\n  };\r\n  instanceNumber?: number;\r\n  scale?: number;\r\n}\r\n\r\nconst OverlayItemComponents = {\r\n  'ohif.overlayItem.windowLevel': VOIOverlayItem,\r\n  'ohif.overlayItem.zoomLevel': ZoomOverlayItem,\r\n  'ohif.overlayItem.instanceNumber': InstanceNumberOverlayItem,\r\n};\r\n\r\n/**\r\n * Customizable Viewport Overlay\r\n */\r\nfunction CustomizableViewportOverlay({\r\n  element,\r\n  viewportData,\r\n  imageSliceData,\r\n  viewportId,\r\n  servicesManager,\r\n}: {\r\n  element: HTMLElement;\r\n  viewportData: ViewportData;\r\n  imageSliceData: ImageSliceData;\r\n  viewportId: string;\r\n  servicesManager: AppTypes.ServicesManager;\r\n}) {\r\n  const { cornerstoneViewportService, customizationService, toolGroupService } =\r\n    servicesManager.services;\r\n  const [voi, setVOI] = useState({ windowCenter: null, windowWidth: null });\r\n  const [scale, setScale] = useState(1);\r\n  const { imageIndex } = imageSliceData;\r\n\r\n  const topLeftCustomization = customizationService.getModeCustomization(\r\n    'cornerstoneOverlayTopLeft'\r\n  );\r\n  const topRightCustomization = customizationService.getModeCustomization(\r\n    'cornerstoneOverlayTopRight'\r\n  );\r\n  const bottomLeftCustomization = customizationService.getModeCustomization(\r\n    'cornerstoneOverlayBottomLeft'\r\n  );\r\n  const bottomRightCustomization = customizationService.getModeCustomization(\r\n    'cornerstoneOverlayBottomRight'\r\n  );\r\n\r\n  const instances = useMemo(() => {\r\n    if (viewportData != null) {\r\n      return _getViewportInstances(viewportData);\r\n    } else {\r\n      return null;\r\n    }\r\n  }, [viewportData, imageIndex]);\r\n\r\n  const instanceNumber = useMemo(\r\n    () =>\r\n      viewportData\r\n        ? getInstanceNumber(viewportData, viewportId, imageIndex, cornerstoneViewportService)\r\n        : null,\r\n    [viewportData, viewportId, imageIndex, cornerstoneViewportService]\r\n  );\r\n\r\n  /**\r\n   * Updating the VOI when the viewport changes its voi\r\n   */\r\n  useEffect(() => {\r\n    const updateVOI = eventDetail => {\r\n      const { range } = eventDetail.detail;\r\n\r\n      if (!range) {\r\n        return;\r\n      }\r\n\r\n      const { lower, upper } = range;\r\n      const { windowWidth, windowCenter } = utilities.windowLevel.toWindowLevel(lower, upper);\r\n\r\n      setVOI({ windowCenter, windowWidth });\r\n    };\r\n\r\n    element.addEventListener(Enums.Events.VOI_MODIFIED, updateVOI);\r\n\r\n    return () => {\r\n      element.removeEventListener(Enums.Events.VOI_MODIFIED, updateVOI);\r\n    };\r\n  }, [viewportId, viewportData, voi, element]);\r\n\r\n  /**\r\n   * Updating the scale when the viewport changes its zoom\r\n   */\r\n  useEffect(() => {\r\n    const updateScale = eventDetail => {\r\n      const { previousCamera, camera } = eventDetail.detail;\r\n\r\n      if (\r\n        previousCamera.parallelScale !== camera.parallelScale ||\r\n        previousCamera.scale !== camera.scale\r\n      ) {\r\n        const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n\r\n        if (!viewport) {\r\n          return;\r\n        }\r\n\r\n        const scale = viewport.getZoom();\r\n\r\n        setScale(scale);\r\n      }\r\n    };\r\n\r\n    element.addEventListener(Enums.Events.CAMERA_MODIFIED, updateScale);\r\n\r\n    return () => {\r\n      element.removeEventListener(Enums.Events.CAMERA_MODIFIED, updateScale);\r\n    };\r\n  }, [viewportId, viewportData, cornerstoneViewportService, element]);\r\n\r\n  const _renderOverlayItem = useCallback(\r\n    item => {\r\n      const overlayItemProps = {\r\n        element,\r\n        viewportData,\r\n        imageSliceData,\r\n        viewportId,\r\n        servicesManager,\r\n        customization: item,\r\n        formatters: {\r\n          formatPN,\r\n          formatDate: formatDICOMDate,\r\n          formatTime: formatDICOMTime,\r\n          formatNumberPrecision,\r\n        },\r\n        instance: instances ? instances[item?.instanceIndex] : null,\r\n        voi,\r\n        scale,\r\n        instanceNumber,\r\n      };\r\n\r\n      if (!item) {\r\n        return null;\r\n      }\r\n\r\n      const { customizationType } = item;\r\n      const OverlayItemComponent = OverlayItemComponents[customizationType];\r\n\r\n      if (OverlayItemComponent) {\r\n        return <OverlayItemComponent {...overlayItemProps} />;\r\n      } else {\r\n        const renderItem = customizationService.transform(item);\r\n\r\n        if (typeof renderItem.content === 'function') {\r\n          return renderItem.content(overlayItemProps);\r\n        }\r\n      }\r\n    },\r\n    [\r\n      element,\r\n      viewportData,\r\n      imageSliceData,\r\n      viewportId,\r\n      servicesManager,\r\n      customizationService,\r\n      instances,\r\n      voi,\r\n      scale,\r\n      instanceNumber,\r\n    ]\r\n  );\r\n\r\n  const getContent = useCallback(\r\n    (customization, defaultItems, keyPrefix) => {\r\n      const items = customization?.items ?? defaultItems;\r\n      return (\r\n        <>\r\n          {items.map((item, index) => (\r\n            <div key={`${keyPrefix}_${index}`}>\r\n              {item?.condition\r\n                ? item.condition({\r\n                    instance: instances ? instances[item?.instanceIndex] : null,\r\n                    formatters: { formatDate: formatDICOMDate },\r\n                  })\r\n                  ? _renderOverlayItem(item)\r\n                  : null\r\n                : _renderOverlayItem(item)}\r\n            </div>\r\n          ))}\r\n        </>\r\n      );\r\n    },\r\n    [_renderOverlayItem]\r\n  );\r\n\r\n  const studyDateItem = {\r\n    id: 'StudyDate',\r\n    customizationType: 'ohif.overlayItem',\r\n    label: '',\r\n    title: 'Study date',\r\n    condition: ({ instance }) => instance && instance.StudyDate,\r\n    contentF: ({ instance, formatters: { formatDate } }) => formatDate(instance.StudyDate),\r\n  };\r\n\r\n  const seriesDescriptionItem = {\r\n    id: 'SeriesDescription',\r\n    customizationType: 'ohif.overlayItem',\r\n    label: '',\r\n    title: 'Series description',\r\n    attribute: 'SeriesDescription',\r\n    condition: ({ instance }) => {\r\n      return instance && instance.SeriesDescription;\r\n    },\r\n  };\r\n\r\n  const topLeftItems = instances\r\n    ? instances\r\n        .map((instance, index) => {\r\n          return [\r\n            {\r\n              ...studyDateItem,\r\n              instanceIndex: index,\r\n            },\r\n            {\r\n              ...seriesDescriptionItem,\r\n              instanceIndex: index,\r\n            },\r\n          ];\r\n        })\r\n        .flat()\r\n    : [];\r\n\r\n  return (\r\n    <ViewportOverlay\r\n      topLeft={\r\n        /**\r\n         * Inline default overlay items for a more standard expansion\r\n         */\r\n        getContent(topLeftCustomization, [...topLeftItems], 'topLeftOverlayItem')\r\n      }\r\n      topRight={getContent(topRightCustomization, [], 'topRightOverlayItem')}\r\n      bottomLeft={getContent(\r\n        bottomLeftCustomization,\r\n        [\r\n          {\r\n            id: 'WindowLevel',\r\n            customizationType: 'ohif.overlayItem.windowLevel',\r\n          },\r\n          {\r\n            id: 'ZoomLevel',\r\n            customizationType: 'ohif.overlayItem.zoomLevel',\r\n            condition: () => {\r\n              const activeToolName = toolGroupService.getActiveToolForViewport(viewportId);\r\n              return activeToolName === 'Zoom';\r\n            },\r\n          },\r\n        ],\r\n        'bottomLeftOverlayItem'\r\n      )}\r\n      bottomRight={getContent(\r\n        bottomRightCustomization,\r\n        [\r\n          {\r\n            id: 'InstanceNumber',\r\n            customizationType: 'ohif.overlayItem.instanceNumber',\r\n          },\r\n        ],\r\n        'bottomRightOverlayItem'\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nfunction _getViewportInstances(viewportData) {\r\n  const imageIds = [];\r\n  if (viewportData.viewportType === Enums.ViewportType.STACK) {\r\n    imageIds.push(viewportData.data.imageIds[0]);\r\n  } else if (viewportData.viewportType === Enums.ViewportType.ORTHOGRAPHIC) {\r\n    const volumes = viewportData.data;\r\n    volumes.forEach(volume => {\r\n      if (!volume?.imageIds || volume.imageIds.length === 0) {\r\n        return;\r\n      }\r\n      imageIds.push(volume.imageIds[0]);\r\n    });\r\n  }\r\n  const instances = [];\r\n\r\n  imageIds.forEach(imageId => {\r\n    const instance = metaData.get('instance', imageId) || {};\r\n    instances.push(instance);\r\n  });\r\n  return instances;\r\n}\r\n\r\nconst getInstanceNumber = (viewportData, viewportId, imageIndex, cornerstoneViewportService) => {\r\n  let instanceNumber;\r\n\r\n  switch (viewportData.viewportType) {\r\n    case Enums.ViewportType.STACK:\r\n      instanceNumber = _getInstanceNumberFromStack(viewportData, imageIndex);\r\n      break;\r\n    case Enums.ViewportType.ORTHOGRAPHIC:\r\n      instanceNumber = _getInstanceNumberFromVolume(\r\n        viewportData,\r\n        viewportId,\r\n        cornerstoneViewportService,\r\n        imageIndex\r\n      );\r\n      break;\r\n  }\r\n\r\n  return instanceNumber ?? null;\r\n};\r\n\r\nfunction _getInstanceNumberFromStack(viewportData, imageIndex) {\r\n  const imageIds = viewportData.data.imageIds;\r\n  const imageId = imageIds[imageIndex];\r\n\r\n  if (!imageId) {\r\n    return;\r\n  }\r\n\r\n  const generalImageModule = metaData.get('generalImageModule', imageId) || {};\r\n  const { instanceNumber } = generalImageModule;\r\n\r\n  const stackSize = imageIds.length;\r\n\r\n  if (stackSize <= 1) {\r\n    return;\r\n  }\r\n\r\n  return parseInt(instanceNumber);\r\n}\r\n\r\n// Since volume viewports can be in any view direction, they can render\r\n// a reconstructed image which don't have imageIds; therefore, no instance and instanceNumber\r\n// Here we check if viewport is in the acquisition direction and if so, we get the instanceNumber\r\nfunction _getInstanceNumberFromVolume(\r\n  viewportData,\r\n  viewportId,\r\n  cornerstoneViewportService,\r\n  imageIndex\r\n) {\r\n  const volumes = viewportData.data;\r\n\r\n  if (!volumes) {\r\n    return;\r\n  }\r\n\r\n  // Todo: support fusion of acquisition plane which has instanceNumber\r\n  const { volume } = volumes[0];\r\n  const { direction, imageIds } = volume;\r\n\r\n  const cornerstoneViewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n\r\n  if (!cornerstoneViewport) {\r\n    return;\r\n  }\r\n\r\n  const camera = cornerstoneViewport.getCamera();\r\n  const { viewPlaneNormal } = camera;\r\n  // checking if camera is looking at the acquisition plane (defined by the direction on the volume)\r\n\r\n  const scanAxisNormal = direction.slice(6, 9);\r\n\r\n  // check if viewPlaneNormal is parallel to scanAxisNormal\r\n  const cross = vec3.cross(vec3.create(), viewPlaneNormal, scanAxisNormal);\r\n  const isAcquisitionPlane = vec3.length(cross) < EPSILON;\r\n\r\n  if (isAcquisitionPlane) {\r\n    const imageId = imageIds[imageIndex];\r\n\r\n    if (!imageId) {\r\n      return {};\r\n    }\r\n\r\n    const { instanceNumber } = metaData.get('generalImageModule', imageId) || {};\r\n    return parseInt(instanceNumber);\r\n  }\r\n}\r\n\r\n/**\r\n * Window Level / Center Overlay item\r\n */\r\nfunction VOIOverlayItem({ voi, customization }: OverlayItemProps) {\r\n  const { windowWidth, windowCenter } = voi;\r\n  if (typeof windowCenter !== 'number' || typeof windowWidth !== 'number') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"overlay-item flex flex-row\"\r\n      style={{ color: (customization && customization.color) || undefined }}\r\n    >\r\n      <span className=\"mr-1 shrink-0\">W:</span>\r\n      <span className=\"ml-1 mr-2 shrink-0\">{windowWidth.toFixed(0)}</span>\r\n      <span className=\"mr-1 shrink-0\">L:</span>\r\n      <span className=\"ml-1 shrink-0\">{windowCenter.toFixed(0)}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * Zoom Level Overlay item\r\n */\r\nfunction ZoomOverlayItem({ scale, customization }: OverlayItemProps) {\r\n  return (\r\n    <div\r\n      className=\"overlay-item flex flex-row\"\r\n      style={{ color: (customization && customization.color) || undefined }}\r\n    >\r\n      <span className=\"mr-1 shrink-0\">Zoom:</span>\r\n      <span>{scale.toFixed(2)}x</span>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * Instance Number Overlay Item\r\n */\r\nfunction InstanceNumberOverlayItem({\r\n  instanceNumber,\r\n  imageSliceData,\r\n  customization,\r\n}: OverlayItemProps) {\r\n  const { imageIndex, numberOfSlices } = imageSliceData;\r\n\r\n  return (\r\n    <div\r\n      className=\"overlay-item flex flex-row\"\r\n      style={{ color: (customization && customization.color) || undefined }}\r\n    >\r\n      <span>\r\n        {instanceNumber !== undefined && instanceNumber !== null ? (\r\n          <>\r\n            <span className=\"mr-1 shrink-0\">I:</span>\r\n            <span>{`${instanceNumber} (${imageIndex + 1}/${numberOfSlices})`}</span>\r\n          </>\r\n        ) : (\r\n          `${imageIndex + 1}/${numberOfSlices}`\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomizableViewportOverlay.propTypes = {\r\n  viewportData: PropTypes.object,\r\n  imageIndex: PropTypes.number,\r\n  viewportId: PropTypes.string,\r\n};\r\n\r\nexport default CustomizableViewportOverlay;\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport {\r\n  metaData,\r\n  Enums,\r\n  Types,\r\n  getEnabledElement,\r\n  utilities as csUtils,\r\n} from '@cornerstonejs/core';\r\nimport { utilities } from '@cornerstonejs/tools';\r\nimport PropTypes from 'prop-types';\r\nimport { vec3 } from 'gl-matrix';\r\n\r\nimport './ViewportOrientationMarkers.css';\r\n\r\nconst { getOrientationStringLPS, invertOrientationStringLPS } = utilities.orientation;\r\n\r\nfunction ViewportOrientationMarkers({\r\n  element,\r\n  viewportData,\r\n  imageSliceData,\r\n  viewportId,\r\n  servicesManager,\r\n  orientationMarkers = ['top', 'left'],\r\n}: withAppTypes) {\r\n  // Rotation is in degrees\r\n  const [rotation, setRotation] = useState(0);\r\n  const [flipHorizontal, setFlipHorizontal] = useState(false);\r\n  const [flipVertical, setFlipVertical] = useState(false);\r\n  const { cornerstoneViewportService } = servicesManager.services;\r\n\r\n  useEffect(() => {\r\n    const cameraModifiedListener = (evt: Types.EventTypes.CameraModifiedEvent) => {\r\n      const { rotation, previousCamera, camera } = evt.detail;\r\n\r\n      if (rotation !== undefined) {\r\n        setRotation(rotation);\r\n      }\r\n\r\n      if (\r\n        camera.flipHorizontal !== undefined &&\r\n        previousCamera.flipHorizontal !== camera.flipHorizontal\r\n      ) {\r\n        setFlipHorizontal(camera.flipHorizontal);\r\n      }\r\n\r\n      if (\r\n        camera.flipVertical !== undefined &&\r\n        previousCamera.flipVertical !== camera.flipVertical\r\n      ) {\r\n        setFlipVertical(camera.flipVertical);\r\n      }\r\n    };\r\n\r\n    element.addEventListener(Enums.Events.CAMERA_MODIFIED, cameraModifiedListener);\r\n\r\n    return () => {\r\n      element.removeEventListener(Enums.Events.CAMERA_MODIFIED, cameraModifiedListener);\r\n    };\r\n  }, []);\r\n\r\n  const markers = useMemo(() => {\r\n    if (!viewportData) {\r\n      return '';\r\n    }\r\n\r\n    let rowCosines, columnCosines;\r\n    if (viewportData.viewportType === 'stack') {\r\n      const imageIndex = imageSliceData.imageIndex;\r\n      const imageId = viewportData.data.imageIds?.[imageIndex];\r\n\r\n      // Workaround for below TODO stub\r\n      if (!imageId) {\r\n        return false;\r\n      }\r\n\r\n      ({ rowCosines, columnCosines } = metaData.get('imagePlaneModule', imageId) || {});\r\n    } else {\r\n      if (!element || !getEnabledElement(element)) {\r\n        return '';\r\n      }\r\n\r\n      const { viewport } = getEnabledElement(element);\r\n      const { viewUp, viewPlaneNormal } = viewport.getCamera();\r\n\r\n      const viewRight = vec3.create();\r\n      vec3.cross(viewRight, viewUp, viewPlaneNormal);\r\n\r\n      columnCosines = [-viewUp[0], -viewUp[1], -viewUp[2]];\r\n      rowCosines = viewRight;\r\n    }\r\n\r\n    if (!rowCosines || !columnCosines || rotation === undefined) {\r\n      return '';\r\n    }\r\n\r\n    const markers = _getOrientationMarkers(\r\n      rowCosines,\r\n      columnCosines,\r\n      rotation,\r\n      flipVertical,\r\n      flipHorizontal\r\n    );\r\n\r\n    const ohifViewport = cornerstoneViewportService.getViewportInfo(viewportId);\r\n\r\n    if (!ohifViewport) {\r\n      console.log('ViewportOrientationMarkers::No viewport');\r\n      return null;\r\n    }\r\n\r\n    return orientationMarkers.map((m, index) => (\r\n      <div\r\n        className={classNames(\r\n          'overlay-text',\r\n          `${m}-mid orientation-marker`,\r\n          'text-aqua-pale',\r\n          'text-[13px]',\r\n          'leading-5'\r\n        )}\r\n        key={`${m}-mid orientation-marker`}\r\n      >\r\n        <div className=\"orientation-marker-value\">{markers[m]}</div>\r\n      </div>\r\n    ));\r\n  }, [\r\n    viewportData,\r\n    imageSliceData,\r\n    rotation,\r\n    flipVertical,\r\n    flipHorizontal,\r\n    orientationMarkers,\r\n    element,\r\n  ]);\r\n\r\n  return <div className=\"ViewportOrientationMarkers select-none\">{markers}</div>;\r\n}\r\n\r\nViewportOrientationMarkers.propTypes = {\r\n  percentComplete: PropTypes.number,\r\n  error: PropTypes.object,\r\n};\r\n\r\nViewportOrientationMarkers.defaultProps = {\r\n  percentComplete: 0,\r\n  error: null,\r\n};\r\n\r\n/**\r\n *\r\n * Computes the orientation labels on a Cornerstone-enabled Viewport element\r\n * when the viewport settings change (e.g. when a horizontal flip or a rotation occurs)\r\n *\r\n * @param {*} rowCosines\r\n * @param {*} columnCosines\r\n * @param {*} rotation in degrees\r\n * @returns\r\n */\r\nfunction _getOrientationMarkers(rowCosines, columnCosines, rotation, flipVertical, flipHorizontal) {\r\n  const rowString = getOrientationStringLPS(rowCosines);\r\n  const columnString = getOrientationStringLPS(columnCosines);\r\n  const oppositeRowString = invertOrientationStringLPS(rowString);\r\n  const oppositeColumnString = invertOrientationStringLPS(columnString);\r\n\r\n  const markers = {\r\n    top: oppositeColumnString,\r\n    left: oppositeRowString,\r\n    right: rowString,\r\n    bottom: columnString,\r\n  };\r\n\r\n  // If any vertical or horizontal flips are applied, change the orientation strings ahead of\r\n  // the rotation applications\r\n  if (flipVertical) {\r\n    markers.top = invertOrientationStringLPS(markers.top);\r\n    markers.bottom = invertOrientationStringLPS(markers.bottom);\r\n  }\r\n\r\n  if (flipHorizontal) {\r\n    markers.left = invertOrientationStringLPS(markers.left);\r\n    markers.right = invertOrientationStringLPS(markers.right);\r\n  }\r\n\r\n  // Swap the labels accordingly if the viewport has been rotated\r\n  // This could be done in a more complex way for intermediate rotation values (e.g. 45 degrees)\r\n  if (rotation === 90 || rotation === -270) {\r\n    return {\r\n      top: markers.left,\r\n      left: invertOrientationStringLPS(markers.top),\r\n      right: invertOrientationStringLPS(markers.bottom),\r\n      bottom: markers.right, // left\r\n    };\r\n  } else if (rotation === -90 || rotation === 270) {\r\n    return {\r\n      top: invertOrientationStringLPS(markers.left),\r\n      left: markers.top,\r\n      bottom: markers.left,\r\n      right: markers.bottom,\r\n    };\r\n  } else if (rotation === 180 || rotation === -180) {\r\n    return {\r\n      top: invertOrientationStringLPS(markers.top),\r\n      left: invertOrientationStringLPS(markers.left),\r\n      bottom: invertOrientationStringLPS(markers.bottom),\r\n      right: invertOrientationStringLPS(markers.right),\r\n    };\r\n  }\r\n\r\n  return markers;\r\n}\r\n\r\nexport default ViewportOrientationMarkers;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Enums } from '@cornerstonejs/core';\r\n\r\nfunction ViewportImageSliceLoadingIndicator({ viewportData, element }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const loadIndicatorRef = useRef(null);\r\n  const imageIdToBeLoaded = useRef(null);\r\n\r\n  const setLoadingState = evt => {\r\n    clearTimeout(loadIndicatorRef.current);\r\n\r\n    loadIndicatorRef.current = setTimeout(() => {\r\n      setLoading(true);\r\n    }, 50);\r\n  };\r\n\r\n  const setFinishLoadingState = evt => {\r\n    clearTimeout(loadIndicatorRef.current);\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const setErrorState = evt => {\r\n    clearTimeout(loadIndicatorRef.current);\r\n\r\n    if (imageIdToBeLoaded.current === evt.detail.imageId) {\r\n      setError(evt.detail.error);\r\n      imageIdToBeLoaded.current = null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    element.addEventListener(Enums.Events.STACK_VIEWPORT_SCROLL, setLoadingState);\r\n    element.addEventListener(Enums.Events.IMAGE_LOAD_ERROR, setErrorState);\r\n    element.addEventListener(Enums.Events.STACK_NEW_IMAGE, setFinishLoadingState);\r\n\r\n    return () => {\r\n      element.removeEventListener(Enums.Events.STACK_VIEWPORT_SCROLL, setLoadingState);\r\n\r\n      element.removeEventListener(Enums.Events.STACK_NEW_IMAGE, setFinishLoadingState);\r\n\r\n      element.removeEventListener(Enums.Events.IMAGE_LOAD_ERROR, setErrorState);\r\n    };\r\n  }, [element, viewportData]);\r\n\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <div className=\"absolute top-0 left-0 h-full w-full bg-black opacity-50\">\r\n          <div className=\"transparent flex h-full w-full items-center justify-center\">\r\n            <p className=\"text-primary-light text-xl font-light\">\r\n              <h4>Error Loading Image</h4>\r\n              <p>An error has occurred.</p>\r\n              <p>{error}</p>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      // IMPORTANT: we need to use the pointer-events-none class to prevent the loading indicator from\r\n      // interacting with the mouse, since scrolling should propagate to the viewport underneath\r\n      <div className=\"pointer-events-none absolute top-0 left-0 h-full w-full bg-black opacity-50\">\r\n        <div className=\"transparent flex h-full w-full items-center justify-center\">\r\n          <p className=\"text-primary-light text-xl font-light\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nViewportImageSliceLoadingIndicator.propTypes = {\r\n  percentComplete: PropTypes.number,\r\n  error: PropTypes.object,\r\n  element: PropTypes.object,\r\n};\r\n\r\nViewportImageSliceLoadingIndicator.defaultProps = {\r\n  percentComplete: 0,\r\n  error: null,\r\n};\r\n\r\nexport default ViewportImageSliceLoadingIndicator;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport ViewportImageScrollbar from './ViewportImageScrollbar';\r\nimport CustomizableViewportOverlay from './CustomizableViewportOverlay';\r\nimport ViewportOrientationMarkers from './ViewportOrientationMarkers';\r\nimport ViewportImageSliceLoadingIndicator from './ViewportImageSliceLoadingIndicator';\r\n\r\nfunction CornerstoneOverlays(props: withAppTypes) {\r\n  const { viewportId, element, scrollbarHeight, servicesManager } = props;\r\n  const { cornerstoneViewportService } = servicesManager.services;\r\n  const [imageSliceData, setImageSliceData] = useState({\r\n    imageIndex: 0,\r\n    numberOfSlices: 0,\r\n  });\r\n  const [viewportData, setViewportData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const { unsubscribe } = cornerstoneViewportService.subscribe(\r\n      cornerstoneViewportService.EVENTS.VIEWPORT_DATA_CHANGED,\r\n      props => {\r\n        if (props.viewportId !== viewportId) {\r\n          return;\r\n        }\r\n\r\n        setViewportData(props.viewportData);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [viewportId]);\r\n\r\n  if (!element) {\r\n    return null;\r\n  }\r\n\r\n  if (viewportData) {\r\n    const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\r\n\r\n    if (viewportInfo?.viewportOptions?.customViewportProps?.hideOverlays) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"noselect\">\r\n      <ViewportImageScrollbar\r\n        viewportId={viewportId}\r\n        viewportData={viewportData}\r\n        element={element}\r\n        imageSliceData={imageSliceData}\r\n        setImageSliceData={setImageSliceData}\r\n        scrollbarHeight={scrollbarHeight}\r\n        servicesManager={servicesManager}\r\n      />\r\n\r\n      <CustomizableViewportOverlay\r\n        imageSliceData={imageSliceData}\r\n        viewportData={viewportData}\r\n        viewportId={viewportId}\r\n        servicesManager={servicesManager}\r\n        element={element}\r\n      />\r\n\r\n      <ViewportImageSliceLoadingIndicator\r\n        viewportData={viewportData}\r\n        element={element}\r\n      />\r\n\r\n      <ViewportOrientationMarkers\r\n        imageSliceData={imageSliceData}\r\n        element={element}\r\n        viewportData={viewportData}\r\n        servicesManager={servicesManager}\r\n        viewportId={viewportId}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CornerstoneOverlays;\r\n","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { CinePlayer, useCine } from '@ohif/ui';\r\nimport { Enums, eventTarget, cache } from '@cornerstonejs/core';\r\nimport { Enums as StreamingEnums } from '@cornerstonejs/streaming-image-volume-loader';\r\nimport { useAppConfig } from '@state';\r\n\r\nfunction WrappedCinePlayer({\r\n  enabledVPElement,\r\n  viewportId,\r\n  servicesManager,\r\n}: withAppTypes<{\r\n  enabledVPElement: HTMLElement;\r\n  viewportId: string;\r\n}>) {\r\n  const { customizationService, displaySetService, viewportGridService } = servicesManager.services;\r\n  const [{ isCineEnabled, cines }, cineService] = useCine();\r\n  const [newStackFrameRate, setNewStackFrameRate] = useState(24);\r\n  const [dynamicInfo, setDynamicInfo] = useState(null);\r\n  const [appConfig] = useAppConfig();\r\n  const isMountedRef = useRef(null);\r\n\r\n  const cineHandler = () => {\r\n    if (!cines?.[viewportId] || !enabledVPElement) {\r\n      return;\r\n    }\r\n\r\n    const { isPlaying = false, frameRate = 24 } = cines[viewportId];\r\n    const validFrameRate = Math.max(frameRate, 1);\r\n\r\n    return isPlaying\r\n      ? cineService.playClip(enabledVPElement, { framesPerSecond: validFrameRate, viewportId })\r\n      : cineService.stopClip(enabledVPElement);\r\n  };\r\n\r\n  const newDisplaySetHandler = useCallback(() => {\r\n    if (!enabledVPElement || !isCineEnabled) {\r\n      return;\r\n    }\r\n\r\n    const { viewports } = viewportGridService.getState();\r\n    const { displaySetInstanceUIDs } = viewports.get(viewportId);\r\n    let frameRate = 24;\r\n    let isPlaying = cines[viewportId]?.isPlaying || false;\r\n    displaySetInstanceUIDs.forEach(displaySetInstanceUID => {\r\n      const displaySet = displaySetService.getDisplaySetByUID(displaySetInstanceUID);\r\n\r\n      if (displaySet.FrameRate) {\r\n        // displaySet.FrameRate corresponds to DICOM tag (0018,1063) which is defined as the the frame time in milliseconds\r\n        // So a bit of math to get the actual frame rate.\r\n        frameRate = Math.round(1000 / displaySet.FrameRate);\r\n        isPlaying ||= !!appConfig.autoPlayCine;\r\n      }\r\n\r\n      // check if the displaySet is dynamic and set the dynamic info\r\n      if (displaySet.isDynamicVolume) {\r\n        const { dynamicVolumeInfo } = displaySet;\r\n        const numTimePoints = dynamicVolumeInfo.timePoints.length;\r\n        const label = dynamicVolumeInfo.splittingTag;\r\n        const timePointIndex = dynamicVolumeInfo.timePointIndex || 0;\r\n        setDynamicInfo({\r\n          volumeId: displaySet.displaySetInstanceUID,\r\n          timePointIndex,\r\n          numTimePoints,\r\n          label,\r\n        });\r\n      } else {\r\n        setDynamicInfo(null);\r\n      }\r\n    });\r\n\r\n    if (isPlaying) {\r\n      cineService.setIsCineEnabled(isPlaying);\r\n    }\r\n    cineService.setCine({ id: viewportId, isPlaying, frameRate });\r\n    setNewStackFrameRate(frameRate);\r\n  }, [displaySetService, viewportId, viewportGridService, cines, isCineEnabled, enabledVPElement]);\r\n\r\n  useEffect(() => {\r\n    isMountedRef.current = true;\r\n\r\n    newDisplaySetHandler();\r\n\r\n    return () => {\r\n      isMountedRef.current = false;\r\n    };\r\n  }, [isCineEnabled, newDisplaySetHandler]);\r\n\r\n  useEffect(() => {\r\n    if (!isCineEnabled) {\r\n      return;\r\n    }\r\n\r\n    cineHandler();\r\n  }, [isCineEnabled, cineHandler, enabledVPElement]);\r\n\r\n  /**\r\n   * Use effect for handling new display set\r\n   */\r\n  useEffect(() => {\r\n    if (!enabledVPElement) {\r\n      return;\r\n    }\r\n\r\n    eventTarget.addEventListener(Enums.Events.STACK_VIEWPORT_NEW_STACK, newDisplaySetHandler);\r\n    // this doesn't makes sense that we are listening to this event on viewport element\r\n    enabledVPElement.addEventListener(\r\n      Enums.Events.VOLUME_VIEWPORT_NEW_VOLUME,\r\n      newDisplaySetHandler\r\n    );\r\n\r\n    return () => {\r\n      cineService.setCine({ id: viewportId, isPlaying: false });\r\n\r\n      eventTarget.removeEventListener(Enums.Events.STACK_VIEWPORT_NEW_STACK, newDisplaySetHandler);\r\n      enabledVPElement.removeEventListener(\r\n        Enums.Events.VOLUME_VIEWPORT_NEW_VOLUME,\r\n        newDisplaySetHandler\r\n      );\r\n    };\r\n  }, [enabledVPElement, newDisplaySetHandler, viewportId]);\r\n\r\n  useEffect(() => {\r\n    if (!cines || !cines[viewportId] || !enabledVPElement || !isMountedRef.current) {\r\n      return;\r\n    }\r\n\r\n    cineHandler();\r\n\r\n    return () => {\r\n      cineService.stopClip(enabledVPElement, { viewportId });\r\n    };\r\n  }, [cines, viewportId, cineService, enabledVPElement, cineHandler]);\r\n\r\n  if (!isCineEnabled) {\r\n    return null;\r\n  }\r\n\r\n  const cine = cines[viewportId];\r\n  const isPlaying = cine?.isPlaying || false;\r\n\r\n  return (\r\n    <RenderCinePlayer\r\n      viewportId={viewportId}\r\n      cineService={cineService}\r\n      newStackFrameRate={newStackFrameRate}\r\n      isPlaying={isPlaying}\r\n      dynamicInfo={dynamicInfo}\r\n      customizationService={customizationService}\r\n    />\r\n  );\r\n}\r\n\r\nfunction RenderCinePlayer({\r\n  viewportId,\r\n  cineService,\r\n  newStackFrameRate,\r\n  isPlaying,\r\n  dynamicInfo: dynamicInfoProp,\r\n  customizationService,\r\n}) {\r\n  const { component: CinePlayerComponent = CinePlayer } =\r\n    customizationService.get('cinePlayer') ?? {};\r\n\r\n  const [dynamicInfo, setDynamicInfo] = useState(dynamicInfoProp);\r\n\r\n  useEffect(() => {\r\n    setDynamicInfo(dynamicInfoProp);\r\n  }, [dynamicInfoProp]);\r\n\r\n  /**\r\n   * Use effect for handling 4D time index changed\r\n   */\r\n  useEffect(() => {\r\n    if (!dynamicInfo) {\r\n      return;\r\n    }\r\n\r\n    const handleTimePointIndexChange = evt => {\r\n      const { volumeId, timePointIndex, numTimePoints, splittingTag } = evt.detail;\r\n      setDynamicInfo({ volumeId, timePointIndex, numTimePoints, label: splittingTag });\r\n    };\r\n\r\n    eventTarget.addEventListener(\r\n      StreamingEnums.Events.DYNAMIC_VOLUME_TIME_POINT_INDEX_CHANGED,\r\n      handleTimePointIndexChange\r\n    );\r\n\r\n    return () => {\r\n      eventTarget.removeEventListener(\r\n        StreamingEnums.Events.DYNAMIC_VOLUME_TIME_POINT_INDEX_CHANGED,\r\n        handleTimePointIndexChange\r\n      );\r\n    };\r\n  }, [dynamicInfo]);\r\n\r\n  useEffect(() => {\r\n    if (!dynamicInfo) {\r\n      return;\r\n    }\r\n\r\n    const { volumeId, timePointIndex, numTimePoints, splittingTag } = dynamicInfo || {};\r\n    const volume = cache.getVolume(volumeId);\r\n    volume.timePointIndex = timePointIndex;\r\n\r\n    setDynamicInfo({ volumeId, timePointIndex, numTimePoints, label: splittingTag });\r\n  }, []);\r\n\r\n  const updateDynamicInfo = useCallback(props => {\r\n    const { volumeId, timePointIndex } = props;\r\n    const volume = cache.getVolume(volumeId);\r\n    volume.timePointIndex = timePointIndex;\r\n  }, []);\r\n\r\n  return (\r\n    <CinePlayerComponent\r\n      className=\"absolute left-1/2 bottom-3 -translate-x-1/2\"\r\n      frameRate={newStackFrameRate}\r\n      isPlaying={isPlaying}\r\n      onClose={() => {\r\n        // also stop the clip\r\n        cineService.setCine({\r\n          id: viewportId,\r\n          isPlaying: false,\r\n        });\r\n        cineService.setIsCineEnabled(false);\r\n      }}\r\n      onPlayPauseChange={isPlaying => {\r\n        cineService.setCine({\r\n          id: viewportId,\r\n          isPlaying,\r\n        });\r\n      }}\r\n      onFrameRateChange={frameRate =>\r\n        cineService.setCine({\r\n          id: viewportId,\r\n          frameRate,\r\n        })\r\n      }\r\n      dynamicInfo={dynamicInfo}\r\n      updateDynamicInfo={updateDynamicInfo}\r\n    />\r\n  );\r\n}\r\n\r\nexport default WrappedCinePlayer;\r\n","import CinePlayer from './CinePlayer';\r\n\r\nexport default CinePlayer;\r\n","import React from 'react';\r\nimport { useViewportActionCornersContext } from '../contextProviders/ViewportActionCornersProvider';\r\nimport { ViewportActionCorners } from '@ohif/ui';\r\n\r\nexport type OHIFViewportActionCornersProps = {\r\n  viewportId: string;\r\n};\r\n\r\nfunction OHIFViewportActionCorners({ viewportId }: OHIFViewportActionCornersProps) {\r\n  const [viewportActionCornersState] = useViewportActionCornersContext();\r\n\r\n  if (!viewportActionCornersState[viewportId]) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ViewportActionCorners\r\n      cornerComponents={viewportActionCornersState[viewportId]}\r\n    ></ViewportActionCorners>\r\n  );\r\n}\r\n\r\nexport default OHIFViewportActionCorners;\r\n","import React, { ReactElement, useCallback, useEffect, useRef, useState, useMemo } from 'react';\r\nimport { AllInOneMenu, ButtonGroup, SwitchButton } from '@ohif/ui';\r\nimport { StackViewport } from '@cornerstonejs/core';\r\nimport { ColormapProps } from '../../types/Colormap';\r\n\r\nexport function Colormap({\r\n  colormaps,\r\n  viewportId,\r\n  displaySets,\r\n  commandsManager,\r\n  servicesManager,\r\n}: ColormapProps): ReactElement {\r\n  const { cornerstoneViewportService } = servicesManager.services;\r\n\r\n  const [activeDisplaySet, setActiveDisplaySet] = useState(displaySets[0]);\r\n\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [prePreviewColormap, setPrePreviewColormap] = useState(null);\r\n\r\n  const showPreviewRef = useRef(showPreview);\r\n  showPreviewRef.current = showPreview;\r\n  const prePreviewColormapRef = useRef(prePreviewColormap);\r\n  prePreviewColormapRef.current = prePreviewColormap;\r\n  const activeDisplaySetRef = useRef(activeDisplaySet);\r\n  activeDisplaySetRef.current = activeDisplaySet;\r\n\r\n  const onSetColorLUT = useCallback(\r\n    props => {\r\n      // TODO: Better way to check if it's a fusion\r\n      const oneOpacityColormaps = ['Grayscale', 'X Ray'];\r\n      const opacity =\r\n        displaySets.length > 1 && !oneOpacityColormaps.includes(props.colormap.name) ? 0.5 : 1;\r\n      commandsManager.run({\r\n        commandName: 'setViewportColormap',\r\n        commandOptions: {\r\n          ...props,\r\n          opacity,\r\n          immediate: true,\r\n        },\r\n        context: 'CORNERSTONE',\r\n      });\r\n    },\r\n    [commandsManager]\r\n  );\r\n\r\n  const getViewportColormap = (viewportId, displaySet) => {\r\n    const { displaySetInstanceUID } = displaySet;\r\n    const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n    if (viewport instanceof StackViewport) {\r\n      const { colormap } = viewport.getProperties();\r\n      if (!colormap) {\r\n        return colormaps.find(c => c.Name === 'Grayscale') || colormaps[0];\r\n      }\r\n      return colormap;\r\n    }\r\n    const actorEntries = viewport.getActors();\r\n    const actorEntry = actorEntries.find(entry => entry.uid.includes(displaySetInstanceUID));\r\n    const { colormap } = viewport.getProperties(actorEntry.uid);\r\n    if (!colormap) {\r\n      return colormaps.find(c => c.Name === 'Grayscale') || colormaps[0];\r\n    }\r\n    return colormap;\r\n  };\r\n\r\n  const buttons = useMemo(() => {\r\n    return displaySets.map((displaySet, index) => ({\r\n      children: displaySet.Modality,\r\n      key: index,\r\n      style: {\r\n        minWidth: `calc(100% / ${displaySets.length})`,\r\n        fontSize: '0.8rem',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      },\r\n    }));\r\n  }, [displaySets]);\r\n\r\n  useEffect(() => {\r\n    setActiveDisplaySet(displaySets[displaySets.length - 1]);\r\n  }, [displaySets]);\r\n\r\n  return (\r\n    <>\r\n      {buttons.length > 1 && (\r\n        <div className=\"all-in-one-menu-item flex w-full justify-center\">\r\n          <ButtonGroup\r\n            onActiveIndexChange={index => {\r\n              setActiveDisplaySet(displaySets[index]);\r\n              setPrePreviewColormap(null);\r\n            }}\r\n            activeIndex={\r\n              displaySets.findIndex(\r\n                ds => ds.displaySetInstanceUID === activeDisplaySetRef.current.displaySetInstanceUID\r\n              ) || 1\r\n            }\r\n            className=\"w-[70%] text-[10px]\"\r\n          >\r\n            {buttons.map(({ children, key, style }) => (\r\n              <div\r\n                key={key}\r\n                style={style}\r\n              >\r\n                {children}\r\n              </div>\r\n            ))}\r\n          </ButtonGroup>\r\n        </div>\r\n      )}\r\n      <div className=\"all-in-one-menu-item flex w-full justify-center\">\r\n        <SwitchButton\r\n          label=\"Preview in viewport\"\r\n          checked={showPreview}\r\n          onChange={checked => {\r\n            setShowPreview(checked);\r\n          }}\r\n        />\r\n      </div>\r\n      <AllInOneMenu.DividerItem />\r\n      <AllInOneMenu.ItemPanel>\r\n        {colormaps.map((colormap, index) => (\r\n          <AllInOneMenu.Item\r\n            key={index}\r\n            label={colormap.description}\r\n            onClick={() => {\r\n              onSetColorLUT({\r\n                viewportId,\r\n                colormap,\r\n                displaySetInstanceUID: activeDisplaySetRef.current.displaySetInstanceUID,\r\n              });\r\n              setPrePreviewColormap(null);\r\n            }}\r\n            onMouseEnter={() => {\r\n              if (showPreviewRef.current) {\r\n                setPrePreviewColormap(getViewportColormap(viewportId, activeDisplaySetRef.current));\r\n                onSetColorLUT({\r\n                  viewportId,\r\n                  colormap,\r\n                  displaySetInstanceUID: activeDisplaySetRef.current.displaySetInstanceUID,\r\n                });\r\n              }\r\n            }}\r\n            onMouseLeave={() => {\r\n              if (showPreviewRef.current && prePreviewColormapRef.current) {\r\n                onSetColorLUT({\r\n                  viewportId,\r\n                  colormap: prePreviewColormapRef.current,\r\n                  displaySetInstanceUID: activeDisplaySetRef.current.displaySetInstanceUID,\r\n                });\r\n              }\r\n            }}\r\n          ></AllInOneMenu.Item>\r\n        ))}\r\n      </AllInOneMenu.ItemPanel>\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement, useCallback, useEffect, useState } from 'react';\r\nimport { SwitchButton } from '@ohif/ui';\r\nimport { StackViewport, VolumeViewport } from '@cornerstonejs/core';\r\nimport { ColorbarProps } from '../../types/Colorbar';\r\nimport { utilities } from '@cornerstonejs/core';\r\n\r\nexport function setViewportColorbar(\r\n  viewportId,\r\n  displaySets,\r\n  commandsManager,\r\n  servicesManager: AppTypes.ServicesManager,\r\n  colorbarOptions\r\n) {\r\n  const { cornerstoneViewportService } = servicesManager.services;\r\n  const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n\r\n  const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\r\n  const backgroundColor = viewportInfo.getViewportOptions().background;\r\n  const isLight = backgroundColor ? utilities.isEqual(backgroundColor, [1, 1, 1]) : false;\r\n\r\n  if (isLight) {\r\n    colorbarOptions.ticks = {\r\n      position: 'left',\r\n      style: {\r\n        font: '12px Arial',\r\n        color: '#000000',\r\n        maxNumTicks: 8,\r\n        tickSize: 5,\r\n        tickWidth: 1,\r\n        labelMargin: 3,\r\n      },\r\n    };\r\n  }\r\n\r\n  const displaySetInstanceUIDs = [];\r\n\r\n  if (viewport instanceof StackViewport) {\r\n    displaySetInstanceUIDs.push(viewportId);\r\n  }\r\n\r\n  if (viewport instanceof VolumeViewport) {\r\n    displaySets.forEach(ds => {\r\n      displaySetInstanceUIDs.push(ds.displaySetInstanceUID);\r\n    });\r\n  }\r\n\r\n  commandsManager.run({\r\n    commandName: 'toggleViewportColorbar',\r\n    commandOptions: {\r\n      viewportId,\r\n      options: colorbarOptions,\r\n      displaySetInstanceUIDs,\r\n    },\r\n    context: 'CORNERSTONE',\r\n  });\r\n}\r\n\r\nexport function Colorbar({\r\n  viewportId,\r\n  displaySets,\r\n  commandsManager,\r\n  servicesManager,\r\n  colorbarProperties,\r\n}: withAppTypes<ColorbarProps>): ReactElement {\r\n  const { colorbarService } = servicesManager.services;\r\n  const {\r\n    width: colorbarWidth,\r\n    colorbarTickPosition,\r\n    colorbarContainerPosition,\r\n    colormaps,\r\n    colorbarInitialColormap,\r\n  } = colorbarProperties;\r\n  const [showColorbar, setShowColorbar] = useState(colorbarService.hasColorbar(viewportId));\r\n\r\n  const onSetColorbar = useCallback(() => {\r\n    setViewportColorbar(viewportId, displaySets, commandsManager, servicesManager, {\r\n      viewportId,\r\n      colormaps,\r\n      ticks: {\r\n        position: colorbarTickPosition,\r\n      },\r\n      width: colorbarWidth,\r\n      position: colorbarContainerPosition,\r\n      activeColormapName: colorbarInitialColormap,\r\n    });\r\n  }, [commandsManager]);\r\n\r\n  useEffect(() => {\r\n    const updateColorbarState = () => {\r\n      setShowColorbar(colorbarService.hasColorbar(viewportId));\r\n    };\r\n\r\n    const { unsubscribe } = colorbarService.subscribe(\r\n      colorbarService.EVENTS.STATE_CHANGED,\r\n      updateColorbarState\r\n    );\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [viewportId]);\r\n\r\n  return (\r\n    <div className=\"all-in-one-menu-item flex w-full justify-center\">\r\n      <div className=\"mr-2 w-[28px]\"></div>\r\n      <SwitchButton\r\n        label=\"Display Color bar\"\r\n        checked={showColorbar}\r\n        onChange={() => {\r\n          onSetColorbar();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactElement, useCallback } from 'react';\r\nimport { AllInOneMenu } from '@ohif/ui';\r\nimport { WindowLevelPreset } from '../../types/WindowLevel';\r\nimport { CommandsManager } from '@ohif/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport type WindowLevelProps = {\r\n  viewportId: string;\r\n  presets: Array<Record<string, Array<WindowLevelPreset>>>;\r\n  commandsManager: CommandsManager;\r\n};\r\n\r\nexport function WindowLevel({\r\n  viewportId,\r\n  commandsManager,\r\n  presets,\r\n}: WindowLevelProps): ReactElement {\r\n  const { t } = useTranslation('WindowLevelActionMenu');\r\n\r\n  const onSetWindowLevel = useCallback(\r\n    props => {\r\n      commandsManager.run({\r\n        commandName: 'setViewportWindowLevel',\r\n        commandOptions: {\r\n          ...props,\r\n          viewportId,\r\n        },\r\n        context: 'CORNERSTONE',\r\n      });\r\n    },\r\n    [commandsManager, viewportId]\r\n  );\r\n\r\n  return (\r\n    <AllInOneMenu.ItemPanel>\r\n      {presets.map((modalityPresets, modalityIndex) => (\r\n        <React.Fragment key={modalityIndex}>\r\n          {Object.entries(modalityPresets).map(([modality, presetsArray]) => (\r\n            <React.Fragment key={modality}>\r\n              <AllInOneMenu.HeaderItem>\r\n                {t('Modality Presets', { modality })}\r\n              </AllInOneMenu.HeaderItem>\r\n              {presetsArray.map((preset, index) => (\r\n                <AllInOneMenu.Item\r\n                  key={`${modality}-${index}`}\r\n                  label={preset.description}\r\n                  secondaryLabel={`${preset.window} / ${preset.level}`}\r\n                  onClick={() => onSetWindowLevel(preset)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          ))}\r\n        </React.Fragment>\r\n      ))}\r\n    </AllInOneMenu.ItemPanel>\r\n  );\r\n}\r\n","import { Icon } from '@ohif/ui';\r\nimport { ButtonEnums } from '@ohif/ui';\r\nimport React, { ReactElement, useState, useCallback } from 'react';\r\nimport { Button, InputFilterText } from '@ohif/ui';\r\nimport { ViewportPreset, VolumeRenderingPresetsContentProps } from '../../types/ViewportPresets';\r\n\r\nexport function VolumeRenderingPresetsContent({\r\n  presets,\r\n  viewportId,\r\n  commandsManager,\r\n  onClose,\r\n}: VolumeRenderingPresetsContentProps): ReactElement {\r\n  const [filteredPresets, setFilteredPresets] = useState(presets);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [selectedPreset, setSelectedPreset] = useState<ViewportPreset | null>(null);\r\n\r\n  const handleSearchChange = useCallback(\r\n    (value: string) => {\r\n      setSearchValue(value);\r\n      const filtered = value\r\n        ? presets.filter(preset => preset.name.toLowerCase().includes(value.toLowerCase()))\r\n        : presets;\r\n      setFilteredPresets(filtered);\r\n    },\r\n    [presets]\r\n  );\r\n\r\n  const handleApply = useCallback(\r\n    props => {\r\n      commandsManager.runCommand('setViewportPreset', {\r\n        ...props,\r\n      });\r\n    },\r\n    [commandsManager]\r\n  );\r\n\r\n  const formatLabel = (label: string, maxChars: number) => {\r\n    return label.length > maxChars ? `${label.slice(0, maxChars)}...` : label;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-full w-full flex-col justify-between\">\r\n      <div className=\"border-secondary-light h-[433px] w-full overflow-hidden rounded border bg-black px-2.5\">\r\n        <div className=\"flex h-[46px] w-full items-center justify-start\">\r\n          <div className=\"h-[26px] w-[200px]\">\r\n            <InputFilterText\r\n              value={searchValue}\r\n              onDebounceChange={handleSearchChange}\r\n              placeholder={'Search all'}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"ohif-scrollbar overflow h-[385px] w-full overflow-y-auto\">\r\n          <div className=\"grid grid-cols-4 gap-3 pt-2 pr-3\">\r\n            {filteredPresets.map((preset, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"flex cursor-pointer flex-col items-start\"\r\n                onClick={() => {\r\n                  setSelectedPreset(preset);\r\n                  handleApply({ preset: preset.name, viewportId });\r\n                }}\r\n              >\r\n                <Icon\r\n                  name={preset.name}\r\n                  className={\r\n                    selectedPreset?.name === preset.name\r\n                      ? 'border-primary-light h-[75px] w-[95px] max-w-none rounded border-2'\r\n                      : 'hover:border-primary-light h-[75px] w-[95px] max-w-none rounded border-2 border-black'\r\n                  }\r\n                />\r\n                <label className=\"text-aqua-pale mt-2 text-left text-xs\">\r\n                  {formatLabel(preset.name, 11)}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <footer className=\"flex h-[60px] w-full items-center justify-end\">\r\n        <div className=\"flex\">\r\n          <Button\r\n            name=\"Cancel\"\r\n            size={ButtonEnums.size.medium}\r\n            type={ButtonEnums.type.secondary}\r\n            onClick={onClose}\r\n          >\r\n            {' '}\r\n            Cancel{' '}\r\n          </Button>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import { AllInOneMenu, Icon } from '@ohif/ui';\r\nimport React, { ReactElement } from 'react';\r\nimport { VolumeRenderingPresetsProps } from '../../types/ViewportPresets';\r\nimport { VolumeRenderingPresetsContent } from './VolumeRenderingPresetsContent';\r\n\r\nexport function VolumeRenderingPresets({\r\n  viewportId,\r\n  servicesManager,\r\n  commandsManager,\r\n  volumeRenderingPresets,\r\n}: VolumeRenderingPresetsProps): ReactElement {\r\n  const { uiModalService } = servicesManager.services;\r\n\r\n  const onClickPresets = () => {\r\n    uiModalService.show({\r\n      content: VolumeRenderingPresetsContent,\r\n      title: 'Rendering Presets',\r\n      movable: true,\r\n      contentProps: {\r\n        onClose: uiModalService.hide,\r\n        presets: volumeRenderingPresets,\r\n        viewportId,\r\n        commandsManager,\r\n      },\r\n      containerDimensions: 'h-[543px] w-[460px]',\r\n      contentDimensions: 'h-[493px] w-[460px]  pl-[12px] pr-[12px]',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AllInOneMenu.Item\r\n      label=\"Rendering Presets\"\r\n      icon={<Icon name=\"VolumeRendering\" />}\r\n      rightIcon={<Icon name=\"action-new-dialog\" />}\r\n      onClick={onClickPresets}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactElement, useCallback, useState, useEffect } from 'react';\r\nimport { VolumeRenderingQualityProps } from '../../types/ViewportPresets';\r\n\r\nexport function VolumeRenderingQuality({\r\n  volumeRenderingQualityRange,\r\n  commandsManager,\r\n  servicesManager,\r\n  viewportId,\r\n}: VolumeRenderingQualityProps): ReactElement {\r\n  const { cornerstoneViewportService } = servicesManager.services;\r\n  const { min, max, step } = volumeRenderingQualityRange;\r\n  const [quality, setQuality] = useState(null);\r\n\r\n  const onChange = useCallback(\r\n    (value: number) => {\r\n      commandsManager.runCommand('setVolumeRenderingQulaity', {\r\n        viewportId,\r\n        volumeQuality: value,\r\n      });\r\n      setQuality(value);\r\n    },\r\n    [commandsManager, viewportId]\r\n  );\r\n\r\n  const calculateBackground = value => {\r\n    const percentage = ((value - 0) / (1 - 0)) * 100;\r\n    return `linear-gradient(to right, #5acce6 0%, #5acce6 ${percentage}%, #3a3f99 ${percentage}%, #3a3f99 100%)`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n    const { actor } = viewport.getActors()[0];\r\n    const mapper = actor.getMapper();\r\n    const image = mapper.getInputData();\r\n    const spacing = image.getSpacing();\r\n    const sampleDistance = mapper.getSampleDistance();\r\n    const averageSpacing = spacing.reduce((a, b) => a + b) / 3.0;\r\n    if (sampleDistance === averageSpacing) {\r\n      setQuality(1);\r\n    } else {\r\n      setQuality(Math.sqrt(averageSpacing / (sampleDistance * 0.5)));\r\n    }\r\n  }, [cornerstoneViewportService, viewportId]);\r\n  return (\r\n    <>\r\n      <div className=\"all-in-one-menu-item flex  w-full flex-row !items-center justify-between gap-[10px]\">\r\n        <label\r\n          className=\"block text-white\"\r\n          htmlFor=\"volume\"\r\n        >\r\n          Quality\r\n        </label>\r\n        {quality !== null && (\r\n          <input\r\n            className=\"bg-inputfield-main h-2 w-[120px] cursor-pointer appearance-none rounded-lg\"\r\n            value={quality}\r\n            id=\"volume\"\r\n            max={max}\r\n            min={min}\r\n            type=\"range\"\r\n            step={step}\r\n            onChange={e => onChange(parseInt(e.target.value, 10))}\r\n            style={{\r\n              background: calculateBackground((quality - min) / (max - min)),\r\n              '--thumb-inner-color': '#5acce6',\r\n              '--thumb-outer-color': '#090c29',\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement, useCallback, useEffect, useState, useRef } from 'react';\r\nimport { VolumeShiftProps } from '../../types/ViewportPresets';\r\n\r\nexport function VolumeShift({\r\n  viewportId,\r\n  commandsManager,\r\n  servicesManager,\r\n}: VolumeShiftProps): ReactElement {\r\n  const { cornerstoneViewportService } = servicesManager.services;\r\n  const [minShift, setMinShift] = useState<number | null>(null);\r\n  const [maxShift, setMaxShift] = useState<number | null>(null);\r\n  const [shift, setShift] = useState<number | null>(\r\n    cornerstoneViewportService.getCornerstoneViewport(viewportId)?.shiftedBy || 0\r\n  );\r\n  const [step, setStep] = useState<number | null>(null);\r\n  const [isBlocking, setIsBlocking] = useState(false);\r\n\r\n  const prevShiftRef = useRef<number>(shift);\r\n\r\n  const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n  const { actor } = viewport.getActors()[0];\r\n  const ofun = actor.getProperty().getScalarOpacity(0);\r\n\r\n  useEffect(() => {\r\n    if (isBlocking) {\r\n      return;\r\n    }\r\n    const range = ofun.getRange();\r\n\r\n    const transferFunctionWidth = range[1] - range[0];\r\n\r\n    const minShift = -transferFunctionWidth;\r\n    const maxShift = transferFunctionWidth;\r\n\r\n    setMinShift(minShift);\r\n    setMaxShift(maxShift);\r\n    setStep(Math.pow(10, Math.floor(Math.log10(transferFunctionWidth / 500))));\r\n  }, [cornerstoneViewportService, viewportId, actor, ofun, isBlocking]);\r\n\r\n  const onChangeRange = useCallback(\r\n    newShift => {\r\n      const shiftDifference = newShift - prevShiftRef.current;\r\n      prevShiftRef.current = newShift;\r\n      viewport.shiftedBy = newShift;\r\n      commandsManager.runCommand('shiftVolumeOpacityPoints', {\r\n        viewportId,\r\n        shift: shiftDifference,\r\n      });\r\n    },\r\n    [commandsManager, viewportId, viewport]\r\n  );\r\n\r\n  const calculateBackground = value => {\r\n    const percentage = ((value - 0) / (1 - 0)) * 100;\r\n    return `linear-gradient(to right, #5acce6 0%, #5acce6 ${percentage}%, #3a3f99 ${percentage}%, #3a3f99 100%)`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"all-in-one-menu-item flex  w-full flex-row !items-center justify-between gap-[10px]\">\r\n        <label\r\n          className=\"block  text-white\"\r\n          htmlFor=\"shift\"\r\n        >\r\n          Shift\r\n        </label>\r\n        {step !== null && (\r\n          <input\r\n            className=\"bg-inputfield-main h-2 w-[120px] cursor-pointer appearance-none rounded-lg\"\r\n            value={shift}\r\n            onChange={e => {\r\n              const shiftValue = parseInt(e.target.value, 10);\r\n              setShift(shiftValue);\r\n              onChangeRange(shiftValue);\r\n            }}\r\n            id=\"shift\"\r\n            onMouseDown={() => setIsBlocking(true)}\r\n            onMouseUp={() => setIsBlocking(false)}\r\n            max={maxShift}\r\n            min={minShift}\r\n            type=\"range\"\r\n            step={step}\r\n            style={{\r\n              background: calculateBackground((shift - minShift) / (maxShift - minShift)),\r\n              '--thumb-inner-color': '#5acce6',\r\n              '--thumb-outer-color': '#090c29',\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement, useState, useEffect, useCallback } from 'react';\r\nimport { VolumeLightingProps } from '../../types/ViewportPresets';\r\n\r\nexport function VolumeLighting({\r\n  servicesManager,\r\n  commandsManager,\r\n  viewportId,\r\n}: VolumeLightingProps): ReactElement {\r\n  const { cornerstoneViewportService } = servicesManager.services;\r\n  const [ambient, setAmbient] = useState(null);\r\n  const [diffuse, setDiffuse] = useState(null);\r\n  const [specular, setSpecular] = useState(null);\r\n\r\n  const onAmbientChange = useCallback(() => {\r\n    commandsManager.runCommand('setVolumeLighting', { viewportId, options: { ambient } });\r\n  }, [ambient, commandsManager, viewportId]);\r\n\r\n  const onDiffuseChange = useCallback(() => {\r\n    commandsManager.runCommand('setVolumeLighting', { viewportId, options: { diffuse } });\r\n  }, [diffuse, commandsManager, viewportId]);\r\n\r\n  const onSpecularChange = useCallback(() => {\r\n    commandsManager.runCommand('setVolumeLighting', { viewportId, options: { specular } });\r\n  }, [specular, commandsManager, viewportId]);\r\n\r\n  const calculateBackground = value => {\r\n    const percentage = ((value - 0) / (1 - 0)) * 100;\r\n    return `linear-gradient(to right, #5acce6 0%, #5acce6 ${percentage}%, #3a3f99 ${percentage}%, #3a3f99 100%)`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n    const { actor } = viewport.getActors()[0];\r\n    const ambient = actor.getProperty().getAmbient();\r\n    const diffuse = actor.getProperty().getDiffuse();\r\n    const specular = actor.getProperty().getSpecular();\r\n    setAmbient(ambient);\r\n    setDiffuse(diffuse);\r\n    setSpecular(specular);\r\n  }, [viewportId, cornerstoneViewportService]);\r\n  return (\r\n    <>\r\n      <div className=\"all-in-one-menu-item flex  w-full flex-row !items-center justify-between gap-[10px]\">\r\n        <label\r\n          className=\"block  text-white\"\r\n          htmlFor=\"ambient\"\r\n        >\r\n          Ambient\r\n        </label>\r\n        {ambient !== null && (\r\n          <input\r\n            className=\"bg-inputfield-main h-2 w-[120px] cursor-pointer appearance-none rounded-lg\"\r\n            value={ambient}\r\n            onChange={e => {\r\n              setAmbient(e.target.value);\r\n              onAmbientChange();\r\n            }}\r\n            id=\"ambient\"\r\n            max={1}\r\n            min={0}\r\n            type=\"range\"\r\n            step={0.1}\r\n            style={{\r\n              background: calculateBackground(ambient),\r\n              '--thumb-inner-color': '#5acce6',\r\n              '--thumb-outer-color': '#090c29',\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"all-in-one-menu-item flex  w-full flex-row !items-center justify-between gap-[10px]\">\r\n        <label\r\n          className=\"block  text-white\"\r\n          htmlFor=\"diffuse\"\r\n        >\r\n          Diffuse\r\n        </label>\r\n        {diffuse !== null && (\r\n          <input\r\n            className=\"bg-inputfield-main h-2 w-[120px] cursor-pointer appearance-none rounded-lg\"\r\n            value={diffuse}\r\n            onChange={e => {\r\n              setDiffuse(e.target.value);\r\n              onDiffuseChange();\r\n            }}\r\n            id=\"diffuse\"\r\n            max={1}\r\n            min={0}\r\n            type=\"range\"\r\n            step={0.1}\r\n            style={{\r\n              background: calculateBackground(diffuse),\r\n              '--thumb-inner-color': '#5acce6',\r\n              '--thumb-outer-color': '#090c29',\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"all-in-one-menu-item flex  w-full flex-row !items-center justify-between gap-[10px]\">\r\n        <label\r\n          className=\"block  text-white\"\r\n          htmlFor=\"specular\"\r\n        >\r\n          Specular\r\n        </label>\r\n        {specular !== null && (\r\n          <input\r\n            className=\"bg-inputfield-main h-2 w-[120px] cursor-pointer appearance-none rounded-lg\"\r\n            value={specular}\r\n            onChange={e => {\r\n              setSpecular(e.target.value);\r\n              onSpecularChange();\r\n            }}\r\n            id=\"specular\"\r\n            max={1}\r\n            min={0}\r\n            type=\"range\"\r\n            step={0.1}\r\n            style={{\r\n              background: calculateBackground(specular),\r\n              '--thumb-inner-color': '#5acce6',\r\n              '--thumb-outer-color': '#090c29',\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement, useCallback, useEffect, useState } from 'react';\r\nimport { SwitchButton } from '@ohif/ui';\r\nimport { VolumeShadeProps } from '../../types/ViewportPresets';\r\n\r\nexport function VolumeShade({\r\n  commandsManager,\r\n  viewportId,\r\n  servicesManager,\r\n}: VolumeShadeProps): ReactElement {\r\n  const { cornerstoneViewportService } = servicesManager.services;\r\n  const [shade, setShade] = useState(true);\r\n  const [key, setKey] = useState(0);\r\n\r\n  const onShadeChange = useCallback(\r\n    (checked: boolean) => {\r\n      commandsManager.runCommand('setVolumeLighting', { viewportId, options: { shade: checked } });\r\n    },\r\n    [commandsManager, viewportId]\r\n  );\r\n  useEffect(() => {\r\n    const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n    const { actor } = viewport.getActors()[0];\r\n    const shade = actor.getProperty().getShade();\r\n    setShade(shade);\r\n    setKey(key + 1);\r\n  }, [viewportId, cornerstoneViewportService]);\r\n\r\n  return (\r\n    <SwitchButton\r\n      key={key}\r\n      label=\"Shade\"\r\n      checked={shade}\r\n      onChange={() => {\r\n        setShade(!shade);\r\n        onShadeChange(!shade);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport { AllInOneMenu } from '@ohif/ui';\r\nimport { VolumeRenderingOptionsProps } from '../../types/ViewportPresets';\r\nimport { VolumeRenderingQuality } from './VolumeRenderingQuality';\r\nimport { VolumeShift } from './VolumeShift';\r\nimport { VolumeLighting } from './VolumeLighting';\r\nimport { VolumeShade } from './VolumeShade';\r\nexport function VolumeRenderingOptions({\r\n  viewportId,\r\n  commandsManager,\r\n  volumeRenderingQualityRange,\r\n  servicesManager,\r\n}: VolumeRenderingOptionsProps): ReactElement {\r\n  return (\r\n    <AllInOneMenu.ItemPanel>\r\n      <VolumeRenderingQuality\r\n        viewportId={viewportId}\r\n        commandsManager={commandsManager}\r\n        servicesManager={servicesManager}\r\n        volumeRenderingQualityRange={volumeRenderingQualityRange}\r\n      />\r\n\r\n      <VolumeShift\r\n        viewportId={viewportId}\r\n        commandsManager={commandsManager}\r\n        servicesManager={servicesManager}\r\n      />\r\n      <div className=\"all-in-one-menu-item mt-2 flex !h-[20px] w-full justify-start\">\r\n        <div className=\"text-aqua-pale text-[13px]\">LIGHTING</div>\r\n      </div>\r\n      <div className=\"bg-primary-dark mt-1 mb-1 h-[2px] w-full\"></div>\r\n      <div className=\"all-in-one-menu-item flex w-full justify-center\">\r\n        <VolumeShade\r\n          commandsManager={commandsManager}\r\n          servicesManager={servicesManager}\r\n          viewportId={viewportId}\r\n        />\r\n      </div>\r\n      <VolumeLighting\r\n        viewportId={viewportId}\r\n        commandsManager={commandsManager}\r\n        servicesManager={servicesManager}\r\n      />\r\n    </AllInOneMenu.ItemPanel>\r\n  );\r\n}\r\n","import React, { ReactElement, useCallback, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport { AllInOneMenu, useViewportGrid } from '@ohif/ui';\r\nimport { Colormap } from './Colormap';\r\nimport { Colorbar } from './Colorbar';\r\nimport { setViewportColorbar } from './Colorbar';\r\nimport { WindowLevelPreset } from '../../types/WindowLevel';\r\nimport { ColorbarProperties } from '../../types/Colorbar';\r\nimport { VolumeRenderingQualityRange } from '../../types/ViewportPresets';\r\nimport { WindowLevel } from './WindowLevel';\r\nimport { VolumeRenderingPresets } from './VolumeRenderingPresets';\r\nimport { VolumeRenderingOptions } from './VolumeRenderingOptions';\r\nimport { ViewportPreset } from '../../types/ViewportPresets';\r\nimport { VolumeViewport3D } from '@cornerstonejs/core';\r\nimport { utilities } from '@cornerstonejs/core';\r\n\r\nexport type WindowLevelActionMenuProps = {\r\n  viewportId: string;\r\n  element: HTMLElement;\r\n  presets: Array<Record<string, Array<WindowLevelPreset>>>;\r\n  verticalDirection: AllInOneMenu.VerticalDirection;\r\n  horizontalDirection: AllInOneMenu.HorizontalDirection;\r\n  colorbarProperties: ColorbarProperties;\r\n  displaySets: Array<any>;\r\n  volumeRenderingPresets: Array<ViewportPreset>;\r\n  volumeRenderingQualityRange: VolumeRenderingQualityRange;\r\n};\r\n\r\nexport function WindowLevelActionMenu({\r\n  viewportId,\r\n  element,\r\n  presets,\r\n  verticalDirection,\r\n  horizontalDirection,\r\n  commandsManager,\r\n  servicesManager,\r\n  colorbarProperties,\r\n  displaySets,\r\n  volumeRenderingPresets,\r\n  volumeRenderingQualityRange,\r\n}: withAppTypes<WindowLevelActionMenuProps>): ReactElement {\r\n  const {\r\n    colormaps,\r\n    colorbarContainerPosition,\r\n    colorbarInitialColormap,\r\n    colorbarTickPosition,\r\n    width: colorbarWidth,\r\n  } = colorbarProperties;\r\n  const { colorbarService, cornerstoneViewportService } = servicesManager.services;\r\n  const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\r\n  const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n  const backgroundColor = viewportInfo.getViewportOptions().background;\r\n  const isLight = backgroundColor ? utilities.isEqual(backgroundColor, [1, 1, 1]) : false;\r\n\r\n  const nonImageModalities = ['SR', 'SEG', 'SM', 'RTSTRUCT', 'RTPLAN', 'RTDOSE'];\r\n\r\n  const { t } = useTranslation('WindowLevelActionMenu');\r\n\r\n  const [viewportGrid] = useViewportGrid();\r\n  const { activeViewportId } = viewportGrid;\r\n\r\n  const [vpHeight, setVpHeight] = useState(element?.clientHeight);\r\n  const [menuKey, setMenuKey] = useState(0);\r\n  const [is3DVolume, setIs3DVolume] = useState(false);\r\n\r\n  const onSetColorbar = useCallback(() => {\r\n    setViewportColorbar(viewportId, displaySets, commandsManager, servicesManager, {\r\n      colormaps,\r\n      ticks: {\r\n        position: colorbarTickPosition,\r\n      },\r\n      width: colorbarWidth,\r\n      position: colorbarContainerPosition,\r\n      activeColormapName: colorbarInitialColormap,\r\n    });\r\n  }, [commandsManager]);\r\n\r\n  useEffect(() => {\r\n    const newVpHeight = element?.clientHeight;\r\n    if (vpHeight !== newVpHeight) {\r\n      setVpHeight(newVpHeight);\r\n    }\r\n  }, [element, vpHeight]);\r\n\r\n  useEffect(() => {\r\n    if (!colorbarService.hasColorbar(viewportId)) {\r\n      return;\r\n    }\r\n    window.setTimeout(() => {\r\n      colorbarService.removeColorbar(viewportId);\r\n      onSetColorbar();\r\n    }, 0);\r\n  }, [viewportId, displaySets, viewport]);\r\n\r\n  useEffect(() => {\r\n    setMenuKey(menuKey + 1);\r\n    const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\r\n    if (viewport instanceof VolumeViewport3D) {\r\n      setIs3DVolume(true);\r\n    } else {\r\n      setIs3DVolume(false);\r\n    }\r\n  }, [\r\n    displaySets,\r\n    viewportId,\r\n    presets,\r\n    volumeRenderingQualityRange,\r\n    volumeRenderingPresets,\r\n    colorbarProperties,\r\n    activeViewportId,\r\n    viewportGrid,\r\n  ]);\r\n\r\n  return (\r\n    <AllInOneMenu.IconMenu\r\n      icon=\"viewport-window-level\"\r\n      verticalDirection={verticalDirection}\r\n      horizontalDirection={horizontalDirection}\r\n      iconClassName={classNames(\r\n        // Visible on hover and for the active viewport\r\n        activeViewportId === viewportId ? 'visible' : 'invisible group-hover:visible',\r\n        'flex shrink-0 cursor-pointer rounded active:text-white text-primary-light',\r\n        isLight ? ' hover:bg-secondary-dark' : 'hover:bg-secondary-light/60'\r\n      )}\r\n      menuStyle={{ maxHeight: vpHeight - 32, minWidth: 218 }}\r\n      onVisibilityChange={() => {\r\n        setVpHeight(element.clientHeight);\r\n      }}\r\n      menuKey={menuKey}\r\n    >\r\n      <AllInOneMenu.ItemPanel>\r\n        {!is3DVolume && (\r\n          <Colorbar\r\n            viewportId={viewportId}\r\n            displaySets={displaySets.filter(ds => !nonImageModalities.includes(ds.Modality))}\r\n            commandsManager={commandsManager}\r\n            servicesManager={servicesManager}\r\n            colorbarProperties={colorbarProperties}\r\n          />\r\n        )}\r\n\r\n        {colormaps && !is3DVolume && (\r\n          <AllInOneMenu.SubMenu\r\n            key=\"colorLUTPresets\"\r\n            itemLabel=\"Color LUT\"\r\n            itemIcon=\"icon-color-lut\"\r\n          >\r\n            <Colormap\r\n              colormaps={colormaps}\r\n              viewportId={viewportId}\r\n              displaySets={displaySets.filter(ds => !nonImageModalities.includes(ds.Modality))}\r\n              commandsManager={commandsManager}\r\n              servicesManager={servicesManager}\r\n            />\r\n          </AllInOneMenu.SubMenu>\r\n        )}\r\n\r\n        {presets && presets.length > 0 && !is3DVolume && (\r\n          <AllInOneMenu.SubMenu\r\n            key=\"windowLevelPresets\"\r\n            itemLabel={t('Modality Window Presets')}\r\n            itemIcon=\"viewport-window-level\"\r\n          >\r\n            <WindowLevel\r\n              viewportId={viewportId}\r\n              commandsManager={commandsManager}\r\n              presets={presets}\r\n            />\r\n          </AllInOneMenu.SubMenu>\r\n        )}\r\n\r\n        {volumeRenderingPresets && is3DVolume && (\r\n          <VolumeRenderingPresets\r\n            servicesManager={servicesManager}\r\n            viewportId={viewportId}\r\n            commandsManager={commandsManager}\r\n            volumeRenderingPresets={volumeRenderingPresets}\r\n          />\r\n        )}\r\n\r\n        {volumeRenderingQualityRange && is3DVolume && (\r\n          <AllInOneMenu.SubMenu itemLabel=\"Rendering Options\">\r\n            <VolumeRenderingOptions\r\n              viewportId={viewportId}\r\n              commandsManager={commandsManager}\r\n              volumeRenderingQualityRange={volumeRenderingQualityRange}\r\n              servicesManager={servicesManager}\r\n            />\r\n          </AllInOneMenu.SubMenu>\r\n        )}\r\n      </AllInOneMenu.ItemPanel>\r\n    </AllInOneMenu.IconMenu>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useCallback, useState } from 'react';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\nimport PropTypes from 'prop-types';\r\nimport * as cs3DTools from '@cornerstonejs/tools';\r\nimport {\r\n  Enums,\r\n  eventTarget,\r\n  getEnabledElement,\r\n  StackViewport,\r\n  utilities as csUtils,\r\n} from '@cornerstonejs/core';\r\nimport { MeasurementService } from '@ohif/core';\r\nimport { Notification, useViewportDialog, AllInOneMenu } from '@ohif/ui';\r\nimport { IStackViewport, IVolumeViewport } from '@cornerstonejs/core/dist/esm/types';\r\n\r\nimport { setEnabledElement } from '../state';\r\n\r\nimport './OHIFCornerstoneViewport.css';\r\nimport CornerstoneOverlays from './Overlays/CornerstoneOverlays';\r\nimport getSOPInstanceAttributes from '../utils/measurementServiceMappings/utils/getSOPInstanceAttributes';\r\nimport CinePlayer from '../components/CinePlayer';\r\nimport { Types } from '@ohif/core';\r\n\r\nimport OHIFViewportActionCorners from '../components/OHIFViewportActionCorners';\r\nimport { getWindowLevelActionMenu } from '../components/WindowLevelActionMenu/getWindowLevelActionMenu';\r\nimport { useAppConfig } from '@state';\r\n\r\nimport { LutPresentation, PositionPresentation } from '../types/Presentation';\r\n\r\nconst STACK = 'stack';\r\n\r\n/**\r\n * Caches the jump to measurement operation, so that if display set is shown,\r\n * it can jump to the measurement.\r\n */\r\nlet cacheJumpToMeasurementEvent;\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  if (nextProps.needsRerendering) {\r\n    return false;\r\n  }\r\n\r\n  if (prevProps.displaySets.length !== nextProps.displaySets.length) {\r\n    return false;\r\n  }\r\n\r\n  if (prevProps.viewportOptions.orientation !== nextProps.viewportOptions.orientation) {\r\n    return false;\r\n  }\r\n\r\n  if (prevProps.viewportOptions.toolGroupId !== nextProps.viewportOptions.toolGroupId) {\r\n    return false;\r\n  }\r\n\r\n  if (prevProps.viewportOptions.viewportType !== nextProps.viewportOptions.viewportType) {\r\n    return false;\r\n  }\r\n\r\n  if (nextProps.viewportOptions.needsRerendering) {\r\n    return false;\r\n  }\r\n\r\n  const prevDisplaySets = prevProps.displaySets;\r\n  const nextDisplaySets = nextProps.displaySets;\r\n\r\n  if (prevDisplaySets.length !== nextDisplaySets.length) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < prevDisplaySets.length; i++) {\r\n    const prevDisplaySet = prevDisplaySets[i];\r\n\r\n    const foundDisplaySet = nextDisplaySets.find(\r\n      nextDisplaySet =>\r\n        nextDisplaySet.displaySetInstanceUID === prevDisplaySet.displaySetInstanceUID\r\n    );\r\n\r\n    if (!foundDisplaySet) {\r\n      return false;\r\n    }\r\n\r\n    // check they contain the same image\r\n    if (foundDisplaySet.images?.length !== prevDisplaySet.images?.length) {\r\n      return false;\r\n    }\r\n\r\n    // check if their imageIds are the same\r\n    if (foundDisplaySet.images?.length) {\r\n      for (let j = 0; j < foundDisplaySet.images.length; j++) {\r\n        if (foundDisplaySet.images[j].imageId !== prevDisplaySet.images[j].imageId) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// Todo: This should be done with expose of internal API similar to react-vtkjs-viewport\r\n// Then we don't need to worry about the re-renders if the props change.\r\nconst OHIFCornerstoneViewport = React.memo((props: withAppTypes) => {\r\n  const {\r\n    displaySets,\r\n    dataSource,\r\n    viewportOptions,\r\n    displaySetOptions,\r\n    servicesManager,\r\n    onElementEnabled,\r\n    // eslint-disable-next-line react/prop-types\r\n    onElementDisabled,\r\n    isJumpToMeasurementDisabled,\r\n    // Note: you SHOULD NOT use the initialImageIdOrIndex for manipulation\r\n    // of the imageData in the OHIFCornerstoneViewport. This prop is used\r\n    // to set the initial state of the viewport's first image to render\r\n    // eslint-disable-next-line react/prop-types\r\n    initialImageIndex,\r\n    // if the viewport is part of a hanging protocol layout\r\n    // we should not really rely on the old synchronizers and\r\n    // you see below we only rehydrate the synchronizers if the viewport\r\n    // is not part of the hanging protocol layout. HPs should\r\n    // define their own synchronizers. Since the synchronizers are\r\n    // viewportId dependent and\r\n    // eslint-disable-next-line react/prop-types\r\n    isHangingProtocolLayout,\r\n  } = props;\r\n\r\n  const viewportId = viewportOptions.viewportId;\r\n\r\n  if (!viewportId) {\r\n    throw new Error('Viewport ID is required');\r\n  }\r\n\r\n  // Since we only have support for dynamic data in volume viewports, we should\r\n  // handle this case here and set the viewportType to volume if any of the\r\n  // displaySets are dynamic volumes\r\n  viewportOptions.viewportType = displaySets.some(ds => ds.isDynamicVolume && ds.isReconstructable)\r\n    ? 'volume'\r\n    : viewportOptions.viewportType;\r\n\r\n  const [scrollbarHeight, setScrollbarHeight] = useState('100px');\r\n  const [enabledVPElement, setEnabledVPElement] = useState(null);\r\n  const elementRef = useRef();\r\n  const [appConfig] = useAppConfig();\r\n\r\n  const {\r\n    measurementService,\r\n    displaySetService,\r\n    toolbarService,\r\n    toolGroupService,\r\n    syncGroupService,\r\n    cornerstoneViewportService,\r\n    cornerstoneCacheService,\r\n    viewportGridService,\r\n    stateSyncService,\r\n    viewportActionCornersService,\r\n  } = servicesManager.services;\r\n\r\n  const [viewportDialogState] = useViewportDialog();\r\n  // useCallback for scroll bar height calculation\r\n  const setImageScrollBarHeight = useCallback(() => {\r\n    const scrollbarHeight = `${elementRef.current.clientHeight - 40}px`;\r\n    setScrollbarHeight(scrollbarHeight);\r\n  }, [elementRef]);\r\n\r\n  // useCallback for onResize\r\n  const onResize = useCallback(() => {\r\n    if (elementRef.current) {\r\n      cornerstoneViewportService.resize();\r\n      setImageScrollBarHeight();\r\n    }\r\n  }, [elementRef]);\r\n\r\n  const cleanUpServices = useCallback(\r\n    viewportInfo => {\r\n      const renderingEngineId = viewportInfo.getRenderingEngineId();\r\n      const syncGroups = viewportInfo.getSyncGroups();\r\n\r\n      toolGroupService.removeViewportFromToolGroup(viewportId, renderingEngineId);\r\n\r\n      syncGroupService.removeViewportFromSyncGroup(viewportId, renderingEngineId, syncGroups);\r\n\r\n      viewportActionCornersService.clear(viewportId);\r\n    },\r\n    [viewportId]\r\n  );\r\n\r\n  const elementEnabledHandler = useCallback(\r\n    evt => {\r\n      // check this is this element reference and return early if doesn't match\r\n      if (evt.detail.element !== elementRef.current) {\r\n        return;\r\n      }\r\n\r\n      const { viewportId, element } = evt.detail;\r\n      const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\r\n      setEnabledElement(viewportId, element);\r\n      setEnabledVPElement(element);\r\n\r\n      const renderingEngineId = viewportInfo.getRenderingEngineId();\r\n      const toolGroupId = viewportInfo.getToolGroupId();\r\n      const syncGroups = viewportInfo.getSyncGroups();\r\n\r\n      toolGroupService.addViewportToToolGroup(viewportId, renderingEngineId, toolGroupId);\r\n\r\n      syncGroupService.addViewportToSyncGroup(viewportId, renderingEngineId, syncGroups);\r\n\r\n      const synchronizersStore = stateSyncService.getState().synchronizersStore;\r\n\r\n      if (synchronizersStore?.[viewportId]?.length && !isHangingProtocolLayout) {\r\n        // If the viewport used to have a synchronizer, re apply it again\r\n        _rehydrateSynchronizers(synchronizersStore, viewportId, syncGroupService);\r\n      }\r\n\r\n      if (onElementEnabled) {\r\n        onElementEnabled(evt);\r\n      }\r\n    },\r\n    [viewportId, onElementEnabled, toolGroupService]\r\n  );\r\n\r\n  // disable the element upon unmounting\r\n  useEffect(() => {\r\n    cornerstoneViewportService.enableViewport(viewportId, elementRef.current);\r\n\r\n    eventTarget.addEventListener(Enums.Events.ELEMENT_ENABLED, elementEnabledHandler);\r\n\r\n    setImageScrollBarHeight();\r\n\r\n    return () => {\r\n      const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\r\n\r\n      if (!viewportInfo) {\r\n        return;\r\n      }\r\n\r\n      cornerstoneViewportService.storePresentation({ viewportId });\r\n\r\n      // This should be done after the store presentation since synchronizers\r\n      // will get cleaned up and they need the viewportInfo to be present\r\n      cleanUpServices(viewportInfo);\r\n\r\n      if (onElementDisabled) {\r\n        onElementDisabled(viewportInfo);\r\n      }\r\n\r\n      cornerstoneViewportService.disableElement(viewportId);\r\n\r\n      eventTarget.removeEventListener(Enums.Events.ELEMENT_ENABLED, elementEnabledHandler);\r\n    };\r\n  }, []);\r\n\r\n  // subscribe to displaySet metadata invalidation (updates)\r\n  // Currently, if the metadata changes we need to re-render the display set\r\n  // for it to take effect in the viewport. As we deal with scaling in the loading,\r\n  // we need to remove the old volume from the cache, and let the\r\n  // viewport to re-add it which will use the new metadata. Otherwise, the\r\n  // viewport will use the cached volume and the new metadata will not be used.\r\n  // Note: this approach does not actually end of sending network requests\r\n  // and it uses the network cache\r\n  useEffect(() => {\r\n    const { unsubscribe } = displaySetService.subscribe(\r\n      displaySetService.EVENTS.DISPLAY_SET_SERIES_METADATA_INVALIDATED,\r\n      async ({\r\n        displaySetInstanceUID: invalidatedDisplaySetInstanceUID,\r\n        invalidateData,\r\n      }: Types.DisplaySetSeriesMetadataInvalidatedEvent) => {\r\n        if (!invalidateData) {\r\n          return;\r\n        }\r\n\r\n        const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\r\n\r\n        if (viewportInfo.hasDisplaySet(invalidatedDisplaySetInstanceUID)) {\r\n          const viewportData = viewportInfo.getViewportData();\r\n          const newViewportData = await cornerstoneCacheService.invalidateViewportData(\r\n            viewportData,\r\n            invalidatedDisplaySetInstanceUID,\r\n            dataSource,\r\n            displaySetService\r\n          );\r\n\r\n          const keepCamera = true;\r\n          cornerstoneViewportService.updateViewport(viewportId, newViewportData, keepCamera);\r\n        }\r\n      }\r\n    );\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [viewportId]);\r\n\r\n  useEffect(() => {\r\n    // handle the default viewportType to be stack\r\n    if (!viewportOptions.viewportType) {\r\n      viewportOptions.viewportType = STACK;\r\n    }\r\n\r\n    const loadViewportData = async () => {\r\n      const viewportData = await cornerstoneCacheService.createViewportData(\r\n        displaySets,\r\n        viewportOptions,\r\n        dataSource,\r\n        initialImageIndex\r\n      );\r\n\r\n      // The presentation state will have been stored previously by closing\r\n      // a viewport.  Otherwise, this viewport will be unchanged and the\r\n      // presentation information will be directly carried over.\r\n      const state = stateSyncService.getState();\r\n      const lutPresentationStore = state.lutPresentationStore as LutPresentation;\r\n      const positionPresentationStore = state.positionPresentationStore as PositionPresentation;\r\n\r\n      const { presentationIds } = viewportOptions;\r\n      const presentations = {\r\n        positionPresentation: positionPresentationStore[presentationIds?.positionPresentationId],\r\n        lutPresentation: lutPresentationStore[presentationIds?.lutPresentationId],\r\n      };\r\n      let measurement;\r\n      if (cacheJumpToMeasurementEvent?.viewportId === viewportId) {\r\n        measurement = cacheJumpToMeasurementEvent.measurement;\r\n        // Delete the position presentation so that viewport navigates direct\r\n        presentations.positionPresentation = null;\r\n        cacheJumpToMeasurementEvent = null;\r\n      }\r\n\r\n      // Note: This is a hack to get the grid to re-render the OHIFCornerstoneViewport component\r\n      // Used for segmentation hydration right now, since the logic to decide whether\r\n      // a viewport needs to render a segmentation lives inside the CornerstoneViewportService\r\n      // so we need to re-render (force update via change of the needsRerendering) so that React\r\n      // does the diffing and decides we should render this again (although the id and element has not changed)\r\n      // so that the CornerstoneViewportService can decide whether to render the segmentation or not. Not that we reached here we can turn it off.\r\n      if (viewportOptions.needsRerendering) {\r\n        viewportOptions.needsRerendering = false;\r\n      }\r\n\r\n      cornerstoneViewportService.setViewportData(\r\n        viewportId,\r\n        viewportData,\r\n        viewportOptions,\r\n        displaySetOptions,\r\n        presentations\r\n      );\r\n      if (measurement) {\r\n        cs3DTools.annotation.selection.setAnnotationSelected(measurement.uid);\r\n      }\r\n    };\r\n\r\n    loadViewportData();\r\n  }, [viewportOptions, displaySets, dataSource]);\r\n\r\n  /**\r\n   * There are two scenarios for jump to click\r\n   * 1. Current viewports contain the displaySet that the annotation was drawn on\r\n   * 2. Current viewports don't contain the displaySet that the annotation was drawn on\r\n   * and we need to change the viewports displaySet for jumping.\r\n   * Since measurement_jump happens via events and listeners, the former case is handled\r\n   * by the measurement_jump direct callback, but the latter case is handled first by\r\n   * the viewportGrid to set the correct displaySet on the viewport, AND THEN we check\r\n   * the cache for jumping to see if there is any jump queued, then we jump to the correct slice.\r\n   */\r\n  useEffect(() => {\r\n    if (isJumpToMeasurementDisabled) {\r\n      return;\r\n    }\r\n\r\n    const unsubscribeFromJumpToMeasurementEvents = _subscribeToJumpToMeasurementEvents(\r\n      measurementService,\r\n      displaySetService,\r\n      elementRef,\r\n      viewportId,\r\n      displaySets,\r\n      viewportGridService,\r\n      cornerstoneViewportService\r\n    );\r\n\r\n    _checkForCachedJumpToMeasurementEvents(\r\n      measurementService,\r\n      displaySetService,\r\n      elementRef,\r\n      viewportId,\r\n      displaySets,\r\n      viewportGridService,\r\n      cornerstoneViewportService\r\n    );\r\n\r\n    return () => {\r\n      unsubscribeFromJumpToMeasurementEvents();\r\n    };\r\n  }, [displaySets, elementRef, viewportId]);\r\n\r\n  // Set up the window level action menu in the viewport action corners.\r\n  useEffect(() => {\r\n    // Doing an === check here because the default config value when not set is true\r\n    if (appConfig.addWindowLevelActionMenu === false) {\r\n      return;\r\n    }\r\n\r\n    // TODO: In the future we should consider using the customization service\r\n    // to determine if and in which corner various action components should go.\r\n    const wlActionMenu = getWindowLevelActionMenu({\r\n      viewportId,\r\n      element: elementRef.current,\r\n      displaySets,\r\n      servicesManager,\r\n      commandsManager,\r\n      verticalDirection: AllInOneMenu.VerticalDirection.TopToBottom,\r\n      horizontalDirection: AllInOneMenu.HorizontalDirection.RightToLeft,\r\n    });\r\n\r\n    viewportActionCornersService.setComponent({\r\n      viewportId,\r\n      id: 'windowLevelActionMenu',\r\n      component: wlActionMenu,\r\n      location: viewportActionCornersService.LOCATIONS.topRight,\r\n      indexPriority: -100,\r\n    });\r\n  }, [displaySets, viewportId, viewportActionCornersService, servicesManager, commandsManager]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"viewport-wrapper\">\r\n        <ReactResizeDetector\r\n          onResize={onResize}\r\n          targetRef={elementRef.current}\r\n        />\r\n        <div\r\n          className=\"cornerstone-viewport-element\"\r\n          style={{ height: '100%', width: '100%' }}\r\n          onContextMenu={e => e.preventDefault()}\r\n          onMouseDown={e => e.preventDefault()}\r\n          ref={elementRef}\r\n        ></div>\r\n        <CornerstoneOverlays\r\n          viewportId={viewportId}\r\n          toolBarService={toolbarService}\r\n          element={elementRef.current}\r\n          scrollbarHeight={scrollbarHeight}\r\n          servicesManager={servicesManager}\r\n        />\r\n        <CinePlayer\r\n          enabledVPElement={enabledVPElement}\r\n          viewportId={viewportId}\r\n          servicesManager={servicesManager}\r\n        />\r\n      </div>\r\n      {/* top offset of 24px to account for ViewportActionCorners. */}\r\n      <div className=\"absolute top-[24px] w-full\">\r\n        {viewportDialogState.viewportId === viewportId && (\r\n          <Notification\r\n            id=\"viewport-notification\"\r\n            message={viewportDialogState.message}\r\n            type={viewportDialogState.type}\r\n            actions={viewportDialogState.actions}\r\n            onSubmit={viewportDialogState.onSubmit}\r\n            onOutsideClick={viewportDialogState.onOutsideClick}\r\n            onKeyPress={viewportDialogState.onKeyPress}\r\n          />\r\n        )}\r\n      </div>\r\n      {/* The OHIFViewportActionCorners follows the viewport in the DOM so that it is naturally at a higher z-index.*/}\r\n      <OHIFViewportActionCorners viewportId={viewportId} />\r\n    </React.Fragment>\r\n  );\r\n}, areEqual);\r\n\r\nfunction _subscribeToJumpToMeasurementEvents(\r\n  measurementService,\r\n  displaySetService,\r\n  elementRef,\r\n  viewportId,\r\n  displaySets,\r\n  viewportGridService,\r\n  cornerstoneViewportService\r\n) {\r\n  const { unsubscribe } = measurementService.subscribe(\r\n    MeasurementService.EVENTS.JUMP_TO_MEASUREMENT_VIEWPORT,\r\n    props => {\r\n      cacheJumpToMeasurementEvent = props;\r\n      const { viewportId: jumpId, measurement, isConsumed } = props;\r\n      if (!measurement || isConsumed) {\r\n        return;\r\n      }\r\n      if (cacheJumpToMeasurementEvent.cornerstoneViewport === undefined) {\r\n        // Decide on which viewport should handle this\r\n        cacheJumpToMeasurementEvent.cornerstoneViewport =\r\n          cornerstoneViewportService.getViewportIdToJump(\r\n            jumpId,\r\n            measurement.displaySetInstanceUID,\r\n            {\r\n              referencedImageId:\r\n                measurement.referencedImageId || measurement.metadata?.referencedImageId,\r\n            }\r\n          );\r\n      }\r\n      if (cacheJumpToMeasurementEvent.cornerstoneViewport !== viewportId) {\r\n        return;\r\n      }\r\n      _jumpToMeasurement(\r\n        measurement,\r\n        elementRef,\r\n        viewportId,\r\n        measurementService,\r\n        displaySetService,\r\n        viewportGridService,\r\n        cornerstoneViewportService\r\n      );\r\n    }\r\n  );\r\n\r\n  return unsubscribe;\r\n}\r\n\r\n// Check if there is a queued jumpToMeasurement event\r\nfunction _checkForCachedJumpToMeasurementEvents(\r\n  measurementService,\r\n  displaySetService,\r\n  elementRef,\r\n  viewportId,\r\n  displaySets,\r\n  viewportGridService,\r\n  cornerstoneViewportService\r\n) {\r\n  if (!cacheJumpToMeasurementEvent) {\r\n    return;\r\n  }\r\n  if (cacheJumpToMeasurementEvent.isConsumed) {\r\n    cacheJumpToMeasurementEvent = null;\r\n    return;\r\n  }\r\n  const displaysUIDs = displaySets.map(displaySet => displaySet.displaySetInstanceUID);\r\n  if (!displaysUIDs?.length) {\r\n    return;\r\n  }\r\n\r\n  // Jump to measurement if the measurement exists\r\n  const { measurement } = cacheJumpToMeasurementEvent;\r\n  if (measurement && elementRef) {\r\n    if (displaysUIDs.includes(measurement?.displaySetInstanceUID)) {\r\n      _jumpToMeasurement(\r\n        measurement,\r\n        elementRef,\r\n        viewportId,\r\n        measurementService,\r\n        displaySetService,\r\n        viewportGridService,\r\n        cornerstoneViewportService\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction _jumpToMeasurement(\r\n  measurement,\r\n  targetElementRef,\r\n  viewportId,\r\n  measurementService,\r\n  displaySetService,\r\n  viewportGridService,\r\n  cornerstoneViewportService\r\n) {\r\n  const targetElement = targetElementRef.current;\r\n  const { displaySetInstanceUID, SOPInstanceUID, frameNumber } = measurement;\r\n\r\n  if (!SOPInstanceUID) {\r\n    console.warn('cannot jump in a non-acquisition plane measurements yet');\r\n    return;\r\n  }\r\n\r\n  const referencedDisplaySet = displaySetService.getDisplaySetByUID(displaySetInstanceUID);\r\n\r\n  // Todo: setCornerstoneMeasurementActive should be handled by the toolGroupManager\r\n  //  to set it properly\r\n  // setCornerstoneMeasurementActive(measurement);\r\n\r\n  viewportGridService.setActiveViewportId(viewportId);\r\n\r\n  const enabledElement = getEnabledElement(targetElement);\r\n\r\n  if (enabledElement) {\r\n    // See how the jumpToSlice() of Cornerstone3D deals with imageIdx param.\r\n    const viewport = enabledElement.viewport as IStackViewport | IVolumeViewport;\r\n\r\n    let imageIdIndex = 0;\r\n    let viewportCameraDirectionMatch = true;\r\n\r\n    if (viewport instanceof StackViewport) {\r\n      const imageIds = viewport.getImageIds();\r\n      imageIdIndex = imageIds.findIndex(imageId => {\r\n        const { SOPInstanceUID: aSOPInstanceUID, frameNumber: aFrameNumber } =\r\n          getSOPInstanceAttributes(imageId);\r\n        return aSOPInstanceUID === SOPInstanceUID && (!frameNumber || frameNumber === aFrameNumber);\r\n      });\r\n    } else {\r\n      // for volume viewport we can't rely on the imageIdIndex since it can be\r\n      // a reconstructed view that doesn't match the original slice numbers etc.\r\n      const { viewPlaneNormal: measurementViewPlane } = measurement.metadata;\r\n      imageIdIndex = referencedDisplaySet.images.findIndex(\r\n        i => i.SOPInstanceUID === SOPInstanceUID\r\n      );\r\n\r\n      // the index is reversed in the volume viewport\r\n      // imageIdIndex = referencedDisplaySet.images.length - 1 - imageIdIndex;\r\n\r\n      const { viewPlaneNormal: viewportViewPlane } = viewport.getCamera();\r\n\r\n      // should compare abs for both planes since the direction can be flipped\r\n      if (\r\n        measurementViewPlane &&\r\n        !csUtils.isEqual(measurementViewPlane.map(Math.abs), viewportViewPlane.map(Math.abs))\r\n      ) {\r\n        viewportCameraDirectionMatch = false;\r\n      }\r\n    }\r\n\r\n    if (!viewportCameraDirectionMatch || imageIdIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    cs3DTools.utilities.jumpToSlice(targetElement, {\r\n      imageIndex: imageIdIndex,\r\n    });\r\n\r\n    cs3DTools.annotation.selection.setAnnotationSelected(measurement.uid);\r\n    // Jump to measurement consumed, remove.\r\n    cacheJumpToMeasurementEvent?.consume?.();\r\n    cacheJumpToMeasurementEvent = null;\r\n  }\r\n}\r\n\r\nfunction _rehydrateSynchronizers(\r\n  synchronizersStore: { [key: string]: unknown },\r\n  viewportId: string,\r\n  syncGroupService: any\r\n) {\r\n  synchronizersStore[viewportId].forEach(synchronizerObj => {\r\n    if (!synchronizerObj.id) {\r\n      return;\r\n    }\r\n\r\n    const { id, sourceViewports, targetViewports } = synchronizerObj;\r\n\r\n    const synchronizer = syncGroupService.getSynchronizer(id);\r\n\r\n    if (!synchronizer) {\r\n      return;\r\n    }\r\n\r\n    const sourceViewportInfo = sourceViewports.find(\r\n      sourceViewport => sourceViewport.viewportId === viewportId\r\n    );\r\n\r\n    const targetViewportInfo = targetViewports.find(\r\n      targetViewport => targetViewport.viewportId === viewportId\r\n    );\r\n\r\n    const isSourceViewportInSynchronizer = synchronizer\r\n      .getSourceViewports()\r\n      .find(sourceViewport => sourceViewport.viewportId === viewportId);\r\n\r\n    const isTargetViewportInSynchronizer = synchronizer\r\n      .getTargetViewports()\r\n      .find(targetViewport => targetViewport.viewportId === viewportId);\r\n\r\n    // if the viewport was previously a source viewport, add it again\r\n    if (sourceViewportInfo && !isSourceViewportInSynchronizer) {\r\n      synchronizer.addSource({\r\n        viewportId: sourceViewportInfo.viewportId,\r\n        renderingEngineId: sourceViewportInfo.renderingEngineId,\r\n      });\r\n    }\r\n\r\n    // if the viewport was previously a target viewport, add it again\r\n    if (targetViewportInfo && !isTargetViewportInSynchronizer) {\r\n      synchronizer.addTarget({\r\n        viewportId: targetViewportInfo.viewportId,\r\n        renderingEngineId: targetViewportInfo.renderingEngineId,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// Component displayName\r\nOHIFCornerstoneViewport.displayName = 'OHIFCornerstoneViewport';\r\n\r\nOHIFCornerstoneViewport.defaultProps = {\r\n  isJumpToMeasurementDisabled: false,\r\n};\r\n\r\nOHIFCornerstoneViewport.propTypes = {\r\n  displaySets: PropTypes.array.isRequired,\r\n  dataSource: PropTypes.object.isRequired,\r\n  viewportOptions: PropTypes.object,\r\n  displaySetOptions: PropTypes.arrayOf(PropTypes.any),\r\n  servicesManager: PropTypes.object.isRequired,\r\n  onElementEnabled: PropTypes.func,\r\n  isJumpToMeasurementDisabled: PropTypes.bool,\r\n  // Note: you SHOULD NOT use the initialImageIdOrIndex for manipulation\r\n  // of the imageData in the OHIFCornerstoneViewport. This prop is used\r\n  // to set the initial state of the viewport's first image to render\r\n  initialImageIdOrIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nexport default OHIFCornerstoneViewport;\r\n","import React, { ReactNode } from 'react';\r\nimport { WindowLevelActionMenu } from './WindowLevelActionMenu';\r\n\r\nexport function getWindowLevelActionMenu({\r\n  viewportId,\r\n  element,\r\n  displaySets,\r\n  servicesManager,\r\n  commandsManager,\r\n  verticalDirection,\r\n  horizontalDirection,\r\n}: withAppTypes): ReactNode {\r\n  const { customizationService } = servicesManager.services;\r\n\r\n  const { presets } = customizationService.get('cornerstone.windowLevelPresets');\r\n  const colorbarProperties = customizationService.get('cornerstone.colorbar');\r\n  const { volumeRenderingPresets, volumeRenderingQualityRange } = customizationService.get(\r\n    'cornerstone.3dVolumeRendering'\r\n  );\r\n\r\n  const displaySetPresets = displaySets\r\n    .filter(displaySet => presets[displaySet.Modality])\r\n    .map(displaySet => {\r\n      return { [displaySet.Modality]: presets[displaySet.Modality] };\r\n    });\r\n\r\n  return (\r\n    <WindowLevelActionMenu\r\n      viewportId={viewportId}\r\n      element={element}\r\n      presets={displaySetPresets}\r\n      verticalDirection={verticalDirection}\r\n      horizontalDirection={horizontalDirection}\r\n      commandsManager={commandsManager}\r\n      servicesManager={servicesManager}\r\n      colorbarProperties={colorbarProperties}\r\n      displaySets={displaySets}\r\n      volumeRenderingPresets={volumeRenderingPresets}\r\n      volumeRenderingQualityRange={volumeRenderingQualityRange}\r\n    />\r\n  );\r\n}\r\n"],"names":["CornerstoneImageScrollbar","viewportData","viewportId","element","imageSliceData","setImageSliceData","scrollbarHeight","servicesManager","cineService","cornerstoneViewportService","services","useEffect","viewport","getCornerstoneViewport","viewportType","Enums","STACK","ORTHOGRAPHIC","sliceData","utilities","imageIndex","numberOfSlices","getCurrentImageIdIndex","data","imageIds","length","updateStackIndex","event","newImageIdIndex","detail","addEventListener","STACK_VIEWPORT_SCROLL","removeEventListener","updateVolumeIndex","VOLUME_NEW_IMAGE","React","ImageScrollbar","onChange","evt","onImageScrollbarChange","isCineEnabled","getState","stopClip","setCine","id","isPlaying","csToolsUtils","debounceLoading","max","height","value","propTypes","PropTypes","isRequired","Element","formatNumberPrecision","number","precision","parseFloat","toFixed","formatDICOMDate","date","strFormat","moment","format","formatDICOMTime","time","formatPN","name","cleaned","split","filter","s","join","trim","EPSILON","OverlayItemComponents","voi","customization","windowWidth","windowCenter","className","style","color","undefined","scale","instanceNumber","CustomizableViewportOverlay","customizationService","toolGroupService","setVOI","useState","setScale","topLeftCustomization","getModeCustomization","topRightCustomization","bottomLeftCustomization","bottomRightCustomization","instances","useMemo","push","forEach","volume","imageId","instance","metaData","_getViewportInstances","getInstanceNumber","updateVOI","eventDetail","range","lower","upper","VOI_MODIFIED","updateScale","previousCamera","camera","parallelScale","getZoom","CAMERA_MODIFIED","_renderOverlayItem","useCallback","item","overlayItemProps","formatters","formatDate","formatTime","instanceIndex","customizationType","OverlayItemComponent","renderItem","transform","content","getContent","defaultItems","keyPrefix","items","map","index","key","condition","studyDateItem","label","title","StudyDate","contentF","seriesDescriptionItem","attribute","SeriesDescription","topLeftItems","flat","ViewportOverlay","topLeft","topRight","bottomLeft","getActiveToolForViewport","bottomRight","generalImageModule","parseInt","_getInstanceNumberFromStack","volumes","direction","cornerstoneViewport","getCamera","viewPlaneNormal","scanAxisNormal","slice","cross","vec3","_getInstanceNumberFromVolume","getOrientationStringLPS","invertOrientationStringLPS","ViewportOrientationMarkers","orientationMarkers","rotation","setRotation","flipHorizontal","setFlipHorizontal","flipVertical","setFlipVertical","cameraModifiedListener","markers","rowCosines","columnCosines","getEnabledElement","viewUp","viewRight","rowString","columnString","oppositeRowString","top","left","right","bottom","_getOrientationMarkers","getViewportInfo","m","classNames","console","log","percentComplete","error","defaultProps","ViewportImageSliceLoadingIndicator","loading","setLoading","setError","loadIndicatorRef","useRef","imageIdToBeLoaded","setLoadingState","clearTimeout","current","setTimeout","setFinishLoadingState","setErrorState","IMAGE_LOAD_ERROR","STACK_NEW_IMAGE","props","setViewportData","unsubscribe","subscribe","EVENTS","VIEWPORT_DATA_CHANGED","viewportInfo","viewportOptions","customViewportProps","hideOverlays","ViewportImageScrollbar","RenderCinePlayer","newStackFrameRate","dynamicInfo","dynamicInfoProp","component","CinePlayerComponent","CinePlayer","get","setDynamicInfo","handleTimePointIndexChange","volumeId","timePointIndex","numTimePoints","splittingTag","eventTarget","StreamingEnums","DYNAMIC_VOLUME_TIME_POINT_INDEX_CHANGED","cache","getVolume","updateDynamicInfo","frameRate","onClose","setIsCineEnabled","onPlayPauseChange","onFrameRateChange","enabledVPElement","displaySetService","viewportGridService","cines","useCine","setNewStackFrameRate","appConfig","useAppConfig","isMountedRef","cineHandler","validFrameRate","Math","playClip","framesPerSecond","newDisplaySetHandler","viewports","displaySetInstanceUIDs","displaySetInstanceUID","displaySet","getDisplaySetByUID","FrameRate","round","autoPlayCine","isDynamicVolume","dynamicVolumeInfo","timePoints","STACK_VIEWPORT_NEW_STACK","VOLUME_VIEWPORT_NEW_VOLUME","cine","viewportActionCornersState","useViewportActionCornersContext","ViewportActionCorners","cornerComponents","Colormap","colormaps","displaySets","commandsManager","activeDisplaySet","setActiveDisplaySet","showPreview","setShowPreview","prePreviewColormap","setPrePreviewColormap","showPreviewRef","prePreviewColormapRef","activeDisplaySetRef","onSetColorLUT","opacity","includes","colormap","run","commandName","commandOptions","immediate","context","buttons","children","Modality","minWidth","fontSize","textAlign","display","justifyContent","alignItems","ButtonGroup","onActiveIndexChange","activeIndex","findIndex","ds","SwitchButton","checked","AllInOneMenu","description","onClick","onMouseEnter","getViewportColormap","StackViewport","getProperties","find","c","Name","actorEntry","getActors","entry","uid","onMouseLeave","setViewportColorbar","colorbarOptions","backgroundColor","getViewportOptions","background","ticks","position","font","maxNumTicks","tickSize","tickWidth","labelMargin","VolumeViewport","options","Colorbar","colorbarProperties","colorbarService","width","colorbarWidth","colorbarTickPosition","colorbarContainerPosition","colorbarInitialColormap","showColorbar","setShowColorbar","hasColorbar","onSetColorbar","activeColormapName","STATE_CHANGED","updateColorbarState","WindowLevel","presets","t","useTranslation","onSetWindowLevel","modalityPresets","modalityIndex","Object","entries","modality","presetsArray","preset","secondaryLabel","window","level","VolumeRenderingPresetsContent","filteredPresets","setFilteredPresets","searchValue","setSearchValue","selectedPreset","setSelectedPreset","handleSearchChange","filtered","toLowerCase","handleApply","runCommand","InputFilterText","onDebounceChange","placeholder","Icon","maxChars","formatLabel","Button","size","ButtonEnums","medium","type","secondary","VolumeRenderingPresets","volumeRenderingPresets","uiModalService","icon","rightIcon","onClickPresets","show","movable","contentProps","hide","containerDimensions","contentDimensions","VolumeRenderingQuality","volumeRenderingQualityRange","min","step","quality","setQuality","volumeQuality","actor","mapper","getMapper","spacing","getInputData","getSpacing","sampleDistance","getSampleDistance","averageSpacing","reduce","a","b","sqrt","htmlFor","e","target","percentage","calculateBackground","VolumeShift","minShift","setMinShift","maxShift","setMaxShift","shift","setShift","shiftedBy","setStep","isBlocking","setIsBlocking","prevShiftRef","ofun","getProperty","getScalarOpacity","getRange","transferFunctionWidth","pow","floor","log10","onChangeRange","newShift","shiftDifference","shiftValue","onMouseDown","onMouseUp","VolumeLighting","ambient","setAmbient","diffuse","setDiffuse","specular","setSpecular","onAmbientChange","onDiffuseChange","onSpecularChange","getAmbient","getDiffuse","getSpecular","VolumeShade","shade","setShade","setKey","onShadeChange","getShade","VolumeRenderingOptions","WindowLevelActionMenu","verticalDirection","horizontalDirection","isLight","nonImageModalities","viewportGrid","useViewportGrid","activeViewportId","vpHeight","setVpHeight","clientHeight","menuKey","setMenuKey","is3DVolume","setIs3DVolume","newVpHeight","removeColorbar","VolumeViewport3D","iconClassName","menuStyle","maxHeight","onVisibilityChange","itemLabel","itemIcon","cacheJumpToMeasurementEvent","areEqual","prevProps","nextProps","needsRerendering","orientation","toolGroupId","prevDisplaySets","nextDisplaySets","i","prevDisplaySet","foundDisplaySet","nextDisplaySet","images","j","OHIFCornerstoneViewport","dataSource","displaySetOptions","onElementEnabled","onElementDisabled","isJumpToMeasurementDisabled","initialImageIndex","isHangingProtocolLayout","Error","some","isReconstructable","setScrollbarHeight","setEnabledVPElement","elementRef","measurementService","toolbarService","syncGroupService","cornerstoneCacheService","stateSyncService","viewportActionCornersService","viewportDialogState","useViewportDialog","setImageScrollBarHeight","onResize","resize","cleanUpServices","renderingEngineId","getRenderingEngineId","syncGroups","getSyncGroups","removeViewportFromToolGroup","removeViewportFromSyncGroup","clear","elementEnabledHandler","setEnabledElement","getToolGroupId","addViewportToToolGroup","addViewportToSyncGroup","synchronizersStore","synchronizerObj","sourceViewports","targetViewports","synchronizer","getSynchronizer","sourceViewportInfo","sourceViewport","targetViewportInfo","targetViewport","isSourceViewportInSynchronizer","getSourceViewports","isTargetViewportInSynchronizer","getTargetViewports","addSource","addTarget","_rehydrateSynchronizers","enableViewport","ELEMENT_ENABLED","storePresentation","disableElement","DISPLAY_SET_SERIES_METADATA_INVALIDATED","async","invalidatedDisplaySetInstanceUID","invalidateData","hasDisplaySet","getViewportData","newViewportData","invalidateViewportData","keepCamera","updateViewport","createViewportData","state","lutPresentationStore","positionPresentationStore","presentationIds","presentations","positionPresentation","positionPresentationId","lutPresentation","lutPresentationId","measurement","cs3DTools","loadViewportData","unsubscribeFromJumpToMeasurementEvents","MeasurementService","JUMP_TO_MEASUREMENT_VIEWPORT","jumpId","isConsumed","getViewportIdToJump","referencedImageId","metadata","_jumpToMeasurement","_subscribeToJumpToMeasurementEvents","displaysUIDs","_checkForCachedJumpToMeasurementEvents","addWindowLevelActionMenu","wlActionMenu","displaySetPresets","getWindowLevelActionMenu","TopToBottom","RightToLeft","setComponent","location","LOCATIONS","indexPriority","ReactResizeDetector","targetRef","onContextMenu","preventDefault","ref","CornerstoneOverlays","toolBarService","Notification","message","actions","onSubmit","onOutsideClick","onKeyPress","OHIFViewportActionCorners","targetElementRef","targetElement","SOPInstanceUID","frameNumber","warn","referencedDisplaySet","setActiveViewportId","enabledElement","imageIdIndex","viewportCameraDirectionMatch","getImageIds","aSOPInstanceUID","aFrameNumber","getSOPInstanceAttributes","measurementViewPlane","viewportViewPlane","csUtils","abs","consume","displayName","initialImageIdOrIndex"],"sourceRoot":""}